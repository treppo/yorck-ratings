{"version":3,"sources":["webpack:///index.min.js","webpack:///webpack/bootstrap 4a58946bf5cb746b2997","webpack:///./index.js","webpack:///./~/underscore/underscore.js","webpack:///./~/data.maybe/lib/index.js","webpack:///./~/data.maybe/lib/maybe.js","webpack:///./~/data.either/lib/index.js","webpack:///./~/data.either/lib/either.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_","Maybe","Either","proxify","url","unproxify","replace","Future","f","get","x","map","g","k","result","flatMap","h","FutureEither","future","getOrLeftMap","either","isLeft","leftMap","Right","request","req","XMLHttpRequest","handleError","Left","status","statusText","onload","responseXML","onerror","open","responseType","overrideMimeType","send","YorckInfos","title","rotateArticle","includes","remove2And3D","correctTitle","compose","searchableTitle","Movie","yorckInfos","imdbInfos","yorck","imdb","YorckPage","doc","movieAnchors","querySelectorAll","ImdbSearchPage","moviePathMaybe","fromNullable","querySelector","a","pathname","ImdbDetailPage","$","selector","textContent","URL","rating","parseFloat","isNaN","ratingsCount","trim","getYorckInfos","yorckFilmsUrl","extractInfos","yp","_ref","href","getMovie","imdbUrl","searchUrl","encodeURIComponent","searchPageEitherFuture","searchPage","getOrElse","detailPage","showOnPage","movies","moviesTable","document","getElementById","moviesHtml","forEach","movie","innerHTML","showPageLoadError","errorMessage","list","add","push","sortBy","reverse","isSneakPreview","infos","startsWith","reject","movieFutureEither","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","createReduce","dir","iterator","obj","iteratee","memo","keys","index","length","currentKey","context","optimizeCb","isArrayLike","arguments","createPredicateIndexFinder","array","predicate","cb","getLength","createIndexFinder","predicateFind","sortedIndex","item","idx","i","Math","max","min","slice","collectNonEnumProps","nonEnumIdx","nonEnumerableProps","constructor","proto","isFunction","prototype","ObjProto","prop","has","contains","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","isArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","VERSION","func","argCount","value","other","collection","accumulator","apply","identity","isObject","matcher","property","Infinity","createAssigner","keysFunc","undefinedOnly","source","l","key","baseCreate","MAX_ARRAY_INDEX","pow","each","collect","results","reduce","foldl","inject","reduceRight","foldr","find","detect","findIndex","findKey","filter","select","negate","every","all","some","any","include","fromIndex","guard","values","indexOf","invoke","method","args","isFunc","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","rand","set","shuffled","random","sample","n","criteria","sort","left","right","b","group","behavior","groupBy","indexBy","countBy","toArray","size","partition","pass","fail","first","head","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","without","difference","uniq","unique","isSorted","isBoolean","seen","union","intersection","argsLength","zip","unzip","object","findLastIndex","low","high","mid","floor","lastIndexOf","range","start","stop","step","ceil","executeBound","sourceFunc","boundFunc","callingContext","self","TypeError","bound","concat","partial","boundArgs","position","bindAll","Error","memoize","hasher","cache","address","delay","wait","setTimeout","defer","throttle","options","timeout","previous","later","leading","now","remaining","clearTimeout","trailing","debounce","immediate","timestamp","callNow","wrap","wrapper","after","times","before","once","hasEnumBug","propertyIsEnumerable","allKeys","mapObject","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","omit","String","defaults","props","clone","tap","interceptor","isMatch","eq","aStack","bStack","className","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","isElement","nodeType","type","name","Int8Array","isFinite","isNumber","isNull","isUndefined","noConflict","constant","noop","propertyOf","matches","accum","Date","getTime","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","match","join","testRegexp","RegExp","replaceRegexp","string","test","escape","unescape","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeChar","template","text","settings","oldSettings","offset","variable","render","e","data","argument","chain","instance","_chain","mixin","valueOf","toJSON","undefined","Just","Nothing","unimplemented","fromEither","fold","fromValidation","isNothing","isJust","of","ap","orElse","cata","pattern","#type","isRight","merge","swap","bimap"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,YE9CD,IAAMW,GAAIX,EAAQ,GACZY,EAAQZ,EAAQ,GAChBa,EAASb,EAAQ,GAEjBc,EAAU,SAAAC,GFiDb,MEjDoB,oBAAsBA,GACvCC,EAAY,SAAAD,GFmDf,MEnDsBA,GAAIE,QAAQ,gCAAiC,KAEhEC,EAAS,QAATA,GAASC,GACb,OACEC,IAAK,WFqDF,MErDQD,GAAE,SAAAE,GFsDR,MEtDaA,MAClBC,IAAK,SAAAC,GFyDF,MEzDOL,GAAO,SAAAM,GF0DZ,ME1DiBL,GAAE,SAAAM,GF2DjB,ME3D2BD,GAAED,EAAEE,SACtCC,QAAS,SAAAC,GF+DN,ME/DWT,GAAO,SAAAM,GFgEhB,MEhEqBL,GAAE,SAAAM,GFiErB,MEjE+BE,GAAEF,GAAQH,IAAIE,GAAGJ,aAIrDQ,EAAe,QAAfA,GAAeC,GACnB,OACEA,OAAQA,EACRT,IAAKS,EAAOT,IACZU,aAAc,SAAAX,GFqEX,MErEgBU,GAAOP,IAAI,SAAAS,GFsEzB,MEtEmCA,GAAOC,OAASD,EAAOE,QAAQd,GAAKY,EAAOX,QAAOA,OAC1FE,IAAK,SAAAH,GFyEF,MEzEOS,GAAaC,EAAOP,IAAI,SAAAS,GF0E7B,MEzEHA,GAAOC,OAASD,EAASlB,EAAOqB,MAAMf,EAAEY,EAAOX,YACjDM,QAAS,SAAAP,GACP,GAAMM,GAASI,EAAOH,QAAQ,SAAAK,GF4E3B,ME3EDA,GAAOC,OAASd,EAAO,SAAAK,GF4EpB,ME5EyBA,GAAEQ,KAAWZ,EAAEY,EAAOX,OAAOS,QAC3D,OAAOD,GAAaH,MAKpBU,EAAU,SAAApB,GF+Eb,ME9EDa,GAAaV,EAAO,SAAAC,GAClB,GAAMiB,GAAM,GAAIC,gBACVC,EAAc,WF+EjB,ME/EuBzB,GAAO0B,KAAI,SAAUH,EAAII,OAAM,MAAMJ,EAAIK,WAAU,kBAAkB1B,GAC/FqB,GAAIM,OAAS,WFiFV,MEhFDvB,GAAgB,KAAdiB,EAAII,OAAgB3B,EAAOqB,MAAME,EAAIO,aAAeL,MACxDF,EAAIQ,QAAUN,EACdF,EAAIS,KAAK,MAAO/B,EAAQC,IAAM,GAC9BqB,EAAIU,aAAe,WACnBV,EAAIW,iBAAiB,aACrBX,EAAIY,WAGFC,EAAa,SAACC,EAAOnC,GACzB,GAAMoC,GAAgB,SAAAD,GACpB,MAAIA,GAAME,SAAS,SACV,OAASF,EAAMjC,QAAQ,QAAS,IAC9BiC,EAAME,SAAS,SACjB,OAASF,EAAMjC,QAAQ,QAAS,IAC9BiC,EAAME,SAAS,SACjB,OAASF,EAAMjC,QAAQ,QAAS,IAEhCiC,GAILG,EAAe,SAAAH,GACnB,MAAIA,GAAME,SAAS,MACVF,EAAMjC,QAAQ,KAAM,IAClBiC,EAAME,SAAS,MACjBF,EAAMjC,QAAQ,KAAM,IAEpBiC,GAILI,EAAe3C,EAAE4C,QAAQF,EAAcF,EAE7C,QACED,MAAOC,EAAcD,GACrBM,gBAAiBF,EAAaJ,GAC9BnC,IAAKA,IAIH0C,EAAQ,SAACC,EAAYC,GACzB,OACEC,MAAOF,EACPG,KAAMF,IAIJG,EAAY,SAAAC,GAChB,OACEC,aAAcrD,EAAEoD,EAAIE,iBAAiB,eAInCC,EAAiB,SAAAH,GACrB,OACEI,eAAgBvD,EAAMwD,aAAaL,EAAIM,cAAc,4BAClD/C,IAAI,SAAAgD,GFkFJ,MElFSA,GAAEC,aAIZC,EAAiB,SAAAT,GACrB,GAAMU,GAAI,SAACC,GFoFR,MEpFqBX,GAAIM,cAAcK,KAAcC,YAAa,OAErE,QACE5D,IAAKC,EAAU+C,EAAIa,KACnBC,OAAQ,WACN,GAAMA,GAASC,WAAWL,EAAE,gCAAgCE,YAC5D,OAAOI,OAAMF,GAAU,EAAIA,KAE7BG,aAAcP,EAAE,gCAAgCE,YAAYM,OAC5D/B,MAAOuB,EAAE,sBAAsBE,cAI7BO,EAAgB,WACpB,GAAMC,GAAgB,mCAEhBC,EAAe,SAAAC,GFsFlB,MErFDA,GAAGrB,aAAa1C,IAAI,SAAAgE,GFsFjB,GEtFmBX,GAAWW,EAAXX,YAAaY,EAAID,EAAJC,IFwFhC,OExF0CtC,GAAW0B,EAAaY,KAEvE,OAAOpD,GAAQgD,GACZ7D,IAAIwC,GACJxC,IAAI8D,IAGHI,EAAW,SAAC9B,GAChB,GAAM+B,GAAU,sBACVC,EAAeD,EAAO,WAAWE,mBAAmBjC,EAAWF,iBAE/DoC,EAAyBzD,EAAQuD,EAEvC,OAAOE,GAAuBlE,QAAQ,SAAAmE,GFyFnC,MExFD3B,GAAe2B,GAAY1B,eACxB7C,IAAI,SAAAiD,GFwFJ,MExFgBpC,GAAQsD,EAAUlB,KAClCuB,UAAUlE,EAAaV,EAAO,SAAAC,GFyF9B,MExFCA,GAAEN,EAAO0B,KAAI,yBAAyBmB,EAAWR,MAAK,gBAAgBwC,QACvEpE,IAAI,SAAAyE,GFyFJ,MEzFkBtC,GAAMC,EAAYc,EAAeuB,SAGpDC,EAAa,SAACC,GAClB,GAAMC,GAAcC,SAASC,eAAe,UACxCC,EAAa,EACjBJ,GAAOK,QAAQ,SAAAC,GF4FZ,ME3FDF,IAAU,yCAGFE,EAAM1C,KAAKgB,OAAM,KAAK0B,EAAM1C,KAAKmB,aAAY,sDAGpCuB,EAAM1C,KAAK9C,IAAG,mBACrBwF,EAAM1C,KAAKX,MAAK,qEAITqD,EAAM3C,MAAM7C,IAAG,mBACtBwF,EAAM3C,MAAMV,MAAK,iDAI7BgD,EAAYM,UAAYH,GAGpBI,EAAoB,SAAAC,GF8EvB,ME7EDP,UAASC,eAAe,UAAUI,WAAS,MAAUE,EAAY,QAE7DT,EAAS,WACb,GAAIU,KACJ,QACEC,IAAK,SAAAL,GACHI,EAAKE,KAAKN,GACVI,EAAOhG,EAAEgG,GAAMG,OAAO,SAAAtG,GF+EnB,ME/EwBA,GAAEqD,KAAKgB,SAAQkC,UAC1Cf,EAAWW,QAKXK,EAAiB,SAAAC,GFiFpB,MEjF6BA,GAAM/D,MAAMgE,WAAW,SAEvDhC,KACG5D,IAAI,SAAAoC,GFkFJ,MEjFC/C,GAAE+C,GACCyD,OAAOH,GACP1F,IAAIkE,GACJlE,IAAI,SAAA8F,GF+EN,ME9EGA,GACG9F,IAAI,SAAAiF,GAA8B,MAAnBN,GAAOW,IAAIL,GAAeA,IACzCzE,aAAa2E,OACrB3E,aAAa2E,IFmFV,SAASrG,EAAQD,EAASH,GGzQhC,GAAAqH,GAAAC,GAKA,WA4KA,QAAAC,GAAAC,GAGA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,KAAYD,GAAA,GAAAC,EAAAD,EAA8BA,GAAAN,EAAA,CAC1C,GAAAQ,GAAAH,IAAAC,IACAF,GAAAD,EAAAC,EAAAF,EAAAM,KAAAN,GAEA,MAAAE,GAGA,gBAAAF,EAAAC,EAAAC,EAAAK,GACAN,EAAAO,EAAAP,EAAAM,EAAA,EACA,IAAAJ,IAAAM,EAAAT,IAAA/G,EAAAkH,KAAAH,GACAK,GAAAF,GAAAH,GAAAK,OACAD,EAAAN,EAAA,IAAAO,EAAA,CAMA,OAJAK,WAAAL,OAAA,IACAH,EAAAF,EAAAG,IAAAC,MACAA,GAAAN,GAEAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IA+ZA,QAAAM,GAAAb,GACA,gBAAAc,EAAAC,EAAAN,GACAM,EAAAC,EAAAD,EAAAN,EAGA,KAFA,GAAAF,GAAAU,EAAAH,GACAR,EAAAN,EAAA,IAAAO,EAAA,EACYD,GAAA,GAAAC,EAAAD,EAA8BA,GAAAN,EAC1C,GAAAe,EAAAD,EAAAR,KAAAQ,GAAA,MAAAR,EAEA,WAsBA,QAAAY,GAAAlB,EAAAmB,EAAAC,GACA,gBAAAN,EAAAO,EAAAC,GACA,GAAAC,GAAA,EAAAhB,EAAAU,EAAAH,EACA,oBAAAQ,GACAtB,EAAA,EACAuB,EAAAD,GAAA,EAAAA,EAAAE,KAAAC,IAAAH,EAAAf,EAAAgB,GAEAhB,EAAAe,GAAA,EAAAE,KAAAE,IAAAJ,EAAA,EAAAf,GAAAe,EAAAf,EAAA,MAEO,IAAAa,GAAAE,GAAAf,EAEP,MADAe,GAAAF,EAAAN,EAAAO,GACAP,EAAAQ,KAAAD,EAAAC,EAAA,EAEA,IAAAD,MAEA,MADAC,GAAAH,EAAAQ,EAAA5I,KAAA+H,EAAAS,EAAAhB,GAAApH,EAAAoE,OACA+D,GAAA,EAAAA,EAAAC,EAAA,EAEA,KAAAD,EAAAtB,EAAA,EAAAuB,EAAAhB,EAAA,EAA0Ce,GAAA,GAAAf,EAAAe,EAA0BA,GAAAtB,EACpE,GAAAc,EAAAQ,KAAAD,EAAA,MAAAC,EAEA,WAqPA,QAAAM,GAAA1B,EAAAG,GACA,GAAAwB,GAAAC,EAAAvB,OACAwB,EAAA7B,EAAA6B,YACAC,EAAA7I,EAAA8I,WAAAF,MAAAG,WAAAC,EAGAC,EAAA,aAGA,KAFAjJ,EAAAkJ,IAAAnC,EAAAkC,KAAAjJ,EAAAmJ,SAAAjC,EAAA+B,IAAA/B,EAAAhB,KAAA+C,GAEAP,KACAO,EAAAN,EAAAD,GACAO,IAAAlC,MAAAkC,KAAAJ,EAAAI,KAAAjJ,EAAAmJ,SAAAjC,EAAA+B,IACA/B,EAAAhB,KAAA+C,GA74BA,GAAAG,GAAAC,KAGAC,EAAAF,EAAApJ,EAGAuJ,EAAAC,MAAAT,UAAAC,EAAAS,OAAAV,UAAAW,EAAAC,SAAAZ,UAIA7C,EAAAqD,EAAArD,KACAsC,EAAAe,EAAAf,MACAoB,EAAAZ,EAAAY,SACAC,EAAAb,EAAAa,eAKAC,EAAAN,MAAAO,QACAC,EAAAP,OAAAvC,KACA+C,EAAAP,EAAAQ,KACAC,EAAAV,OAAAW,OAGAC,EAAA,aAGArK,EAAA,SAAA+G,GACA,MAAAA,aAAA/G,GAAA+G,EACAsC,eAAArJ,QACAqJ,KAAAiB,SAAAvD,GADA,GAAA/G,GAAA+G,GAQA,oBAAAtH,MAAAD,UACAA,EAAAC,EAAAD,QAAAQ,GAEAR,EAAAQ,IAMAA,EAAAuK,QAAA,OAKA,IAAAhD,GAAA,SAAAiD,EAAAlD,EAAAmD,GACA,YAAAnD,EAAA,MAAAkD,EACA,cAAAC,EAAA,EAAAA,GACA,uBAAAC,GACA,MAAAF,GAAA5K,KAAA0H,EAAAoD,GAEA,wBAAAA,EAAAC,GACA,MAAAH,GAAA5K,KAAA0H,EAAAoD,EAAAC,GAEA,wBAAAD,EAAAvD,EAAAyD,GACA,MAAAJ,GAAA5K,KAAA0H,EAAAoD,EAAAvD,EAAAyD,GAEA,wBAAAC,EAAAH,EAAAvD,EAAAyD,GACA,MAAAJ,GAAA5K,KAAA0H,EAAAuD,EAAAH,EAAAvD,EAAAyD,IAGA,kBACA,MAAAJ,GAAAM,MAAAxD,EAAAG,aAOAI,EAAA,SAAA6C,EAAApD,EAAAmD,GACA,aAAAC,EAAA1K,EAAA+K,SACA/K,EAAA8I,WAAA4B,GAAAnD,EAAAmD,EAAApD,EAAAmD,GACAzK,EAAAgL,SAAAN,GAAA1K,EAAAiL,QAAAP,GACA1K,EAAAkL,SAAAR,GAEA1K,GAAAgH,SAAA,SAAA0D,EAAApD,GACA,MAAAO,GAAA6C,EAAApD,EAAA6D,KAIA,IAAAC,GAAA,SAAAC,EAAAC,GACA,gBAAAvE,GACA,GAAAK,GAAAK,UAAAL,MACA,MAAAA,GAAA,MAAAL,EAAA,MAAAA,EACA,QAAAI,GAAA,EAAyBC,EAAAD,EAAgBA,IAIzC,OAHAoE,GAAA9D,UAAAN,GACAD,EAAAmE,EAAAE,GACAC,EAAAtE,EAAAE,OACAgB,EAAA,EAAuBoD,EAAApD,EAAOA,IAAA,CAC9B,GAAAqD,GAAAvE,EAAAkB,EACAkD,IAAA,SAAAvE,EAAA0E,KAAA1E,EAAA0E,GAAAF,EAAAE,IAGA,MAAA1E,KAKA2E,EAAA,SAAA3C,GACA,IAAA/I,EAAAgL,SAAAjC,GAAA,QACA,IAAAoB,EAAA,MAAAA,GAAApB,EACAsB,GAAAtB,WACA,IAAAjI,GAAA,GAAAuJ,EAEA,OADAA,GAAAtB,UAAA,KACAjI,GAGAoK,EAAA,SAAAO,GACA,gBAAA1E,GACA,aAAAA,EAAA,OAAAA,EAAA0E,KAQAE,EAAAtD,KAAAuD,IAAA,QACA9D,EAAAoD,EAAA,UACA1D,EAAA,SAAAoD,GACA,GAAAxD,GAAAU,EAAA8C,EACA,uBAAAxD,OAAA,GAAAuE,GAAAvE,EASApH,GAAA6L,KAAA7L,EAAA2F,QAAA,SAAAoB,EAAAC,EAAAM,GACAN,EAAAO,EAAAP,EAAAM,EACA,IAAAc,GAAAhB,CACA,IAAAI,EAAAT,GACA,IAAAqB,EAAA,EAAAhB,EAAAL,EAAAK,OAAsCA,EAAAgB,EAAYA,IAClDpB,EAAAD,EAAAqB,KAAArB,OAEK,CACL,GAAAG,GAAAlH,EAAAkH,KAAAH,EACA,KAAAqB,EAAA,EAAAhB,EAAAF,EAAAE,OAAuCA,EAAAgB,EAAYA,IACnDpB,EAAAD,EAAAG,EAAAkB,IAAAlB,EAAAkB,GAAArB,GAGA,MAAAA,IAIA/G,EAAAW,IAAAX,EAAA8L,QAAA,SAAA/E,EAAAC,EAAAM,GACAN,EAAAa,EAAAb,EAAAM,EAIA,QAHAJ,IAAAM,EAAAT,IAAA/G,EAAAkH,KAAAH,GACAK,GAAAF,GAAAH,GAAAK,OACA2E,EAAAvC,MAAApC,GACAD,EAAA,EAAuBC,EAAAD,EAAgBA,IAAA,CACvC,GAAAE,GAAAH,IAAAC,IACA4E,GAAA5E,GAAAH,EAAAD,EAAAM,KAAAN,GAEA,MAAAgF,IA+BA/L,EAAAgM,OAAAhM,EAAAiM,MAAAjM,EAAAkM,OAAAtF,EAAA,GAGA5G,EAAAmM,YAAAnM,EAAAoM,MAAAxF,EAAA,IAGA5G,EAAAqM,KAAArM,EAAAsM,OAAA,SAAAvF,EAAAa,EAAAN,GACA,GAAAmE,EAMA,OAJAA,GADAjE,EAAAT,GACA/G,EAAAuM,UAAAxF,EAAAa,EAAAN,GAEAtH,EAAAwM,QAAAzF,EAAAa,EAAAN,GAEA,SAAAmE,GAAA,KAAAA,EAAA1E,EAAA0E,GAAA,QAKAzL,EAAAyM,OAAAzM,EAAA0M,OAAA,SAAA3F,EAAAa,EAAAN,GACA,GAAAyE,KAKA,OAJAnE,GAAAC,EAAAD,EAAAN,GACAtH,EAAA6L,KAAA9E,EAAA,SAAA2D,EAAAvD,EAAAnB,GACA4B,EAAA8C,EAAAvD,EAAAnB,IAAA+F,EAAA7F,KAAAwE,KAEAqB,GAIA/L,EAAAwG,OAAA,SAAAO,EAAAa,EAAAN,GACA,MAAAtH,GAAAyM,OAAA1F,EAAA/G,EAAA2M,OAAA9E,EAAAD,IAAAN,IAKAtH,EAAA4M,MAAA5M,EAAA6M,IAAA,SAAA9F,EAAAa,EAAAN,GACAM,EAAAC,EAAAD,EAAAN,EAGA,QAFAJ,IAAAM,EAAAT,IAAA/G,EAAAkH,KAAAH,GACAK,GAAAF,GAAAH,GAAAK,OACAD,EAAA,EAAuBC,EAAAD,EAAgBA,IAAA,CACvC,GAAAE,GAAAH,IAAAC,IACA,KAAAS,EAAAb,EAAAM,KAAAN,GAAA,SAEA,UAKA/G,EAAA8M,KAAA9M,EAAA+M,IAAA,SAAAhG,EAAAa,EAAAN,GACAM,EAAAC,EAAAD,EAAAN,EAGA,QAFAJ,IAAAM,EAAAT,IAAA/G,EAAAkH,KAAAH,GACAK,GAAAF,GAAAH,GAAAK,OACAD,EAAA,EAAuBC,EAAAD,EAAgBA,IAAA,CACvC,GAAAE,GAAAH,IAAAC,IACA,IAAAS,EAAAb,EAAAM,KAAAN,GAAA,SAEA,UAKA/G,EAAAmJ,SAAAnJ,EAAAyC,SAAAzC,EAAAgN,QAAA,SAAAjG,EAAAmB,EAAA+E,EAAAC,GAGA,MAFA1F,GAAAT,OAAA/G,EAAAmN,OAAApG,KACA,gBAAAkG,IAAAC,KAAAD,EAAA,GACAjN,EAAAoN,QAAArG,EAAAmB,EAAA+E,IAAA,GAIAjN,EAAAqN,OAAA,SAAAtG,EAAAuG,GACA,GAAAC,GAAA/E,EAAA5I,KAAA6H,UAAA,GACA+F,EAAAxN,EAAA8I,WAAAwE,EACA,OAAAtN,GAAAW,IAAAoG,EAAA,SAAA2D,GACA,GAAAF,GAAAgD,EAAAF,EAAA5C,EAAA4C,EACA,cAAA9C,MAAAM,MAAAJ,EAAA6C,MAKAvN,EAAAyN,MAAA,SAAA1G,EAAA0E,GACA,MAAAzL,GAAAW,IAAAoG,EAAA/G,EAAAkL,SAAAO,KAKAzL,EAAA0N,MAAA,SAAA3G,EAAA4G,GACA,MAAA3N,GAAAyM,OAAA1F,EAAA/G,EAAAiL,QAAA0C,KAKA3N,EAAA4N,UAAA,SAAA7G,EAAA4G,GACA,MAAA3N,GAAAqM,KAAAtF,EAAA/G,EAAAiL,QAAA0C,KAIA3N,EAAAsI,IAAA,SAAAvB,EAAAC,EAAAM,GACA,GACAoD,GAAAmD,EADA/M,IAAAqK,KAAA2C,IAAA3C,IAEA,UAAAnE,GAAA,MAAAD,EAAA,CACAA,EAAAS,EAAAT,KAAA/G,EAAAmN,OAAApG,EACA,QAAAqB,GAAA,EAAAhB,EAAAL,EAAAK,OAA0CA,EAAAgB,EAAYA,IACtDsC,EAAA3D,EAAAqB,GACAsC,EAAA5J,IACAA,EAAA4J,OAIA1D,GAAAa,EAAAb,EAAAM,GACAtH,EAAA6L,KAAA9E,EAAA,SAAA2D,EAAAvD,EAAAnB,GACA6H,EAAA7G,EAAA0D,EAAAvD,EAAAnB,IACA6H,EAAAC,GAAAD,MAAA1C,MAAArK,MAAAqK,QACArK,EAAA4J,EACAoD,EAAAD,IAIA,OAAA/M,IAIAd,EAAAuI,IAAA,SAAAxB,EAAAC,EAAAM,GACA,GACAoD,GAAAmD,EADA/M,EAAAqK,IAAA2C,EAAA3C,GAEA,UAAAnE,GAAA,MAAAD,EAAA,CACAA,EAAAS,EAAAT,KAAA/G,EAAAmN,OAAApG,EACA,QAAAqB,GAAA,EAAAhB,EAAAL,EAAAK,OAA0CA,EAAAgB,EAAYA,IACtDsC,EAAA3D,EAAAqB,GACAtH,EAAA4J,IACA5J,EAAA4J,OAIA1D,GAAAa,EAAAb,EAAAM,GACAtH,EAAA6L,KAAA9E,EAAA,SAAA2D,EAAAvD,EAAAnB,GACA6H,EAAA7G,EAAA0D,EAAAvD,EAAAnB,IACA8H,EAAAD,OAAA1C,KAAArK,IAAAqK,OACArK,EAAA4J,EACAoD,EAAAD,IAIA,OAAA/M,IAKAd,EAAA+N,QAAA,SAAAhH,GAIA,OAAAiH,GAHAC,EAAAzG,EAAAT,KAAA/G,EAAAmN,OAAApG,GACAK,EAAA6G,EAAA7G,OACA8G,EAAA1E,MAAApC,GACAD,EAAA,EAA6BC,EAAAD,EAAgBA,IAC7C6G,EAAAhO,EAAAmO,OAAA,EAAAhH,GACA6G,IAAA7G,IAAA+G,EAAA/G,GAAA+G,EAAAF,IACAE,EAAAF,GAAAC,EAAA9G,EAEA,OAAA+G,IAMAlO,EAAAoO,OAAA,SAAArH,EAAAsH,EAAAnB,GACA,aAAAmB,GAAAnB,GACA1F,EAAAT,OAAA/G,EAAAmN,OAAApG,IACAA,EAAA/G,EAAAmO,OAAApH,EAAAK,OAAA,KAEApH,EAAA+N,QAAAhH,GAAAyB,MAAA,EAAAH,KAAAC,IAAA,EAAA+F,KAIArO,EAAAmG,OAAA,SAAAY,EAAAC,EAAAM,GAEA,MADAN,GAAAa,EAAAb,EAAAM,GACAtH,EAAAyN,MAAAzN,EAAAW,IAAAoG,EAAA,SAAA2D,EAAAvD,EAAAnB,GACA,OACA0E,QACAvD,QACAmH,SAAAtH,EAAA0D,EAAAvD,EAAAnB,MAEKuI,KAAA,SAAAC,EAAAC,GACL,GAAA9K,GAAA6K,EAAAF,SACAI,EAAAD,EAAAH,QACA,IAAA3K,IAAA+K,EAAA,CACA,GAAA/K,EAAA+K,GAAA,SAAA/K,EAAA,QACA,IAAA+K,EAAA/K,GAAA,SAAA+K,EAAA,SAEA,MAAAF,GAAArH,MAAAsH,EAAAtH,QACK,SAIL,IAAAwH,GAAA,SAAAC,GACA,gBAAA7H,EAAAC,EAAAM,GACA,GAAAxG,KAMA,OALAkG,GAAAa,EAAAb,EAAAM,GACAtH,EAAA6L,KAAA9E,EAAA,SAAA2D,EAAAvD,GACA,GAAAsE,GAAAzE,EAAA0D,EAAAvD,EAAAJ,EACA6H,GAAA9N,EAAA4J,EAAAe,KAEA3K,GAMAd,GAAA6O,QAAAF,EAAA,SAAA7N,EAAA4J,EAAAe,GACAzL,EAAAkJ,IAAApI,EAAA2K,GAAA3K,EAAA2K,GAAAvF,KAAAwE,GAAoD5J,EAAA2K,IAAAf,KAKpD1K,EAAA8O,QAAAH,EAAA,SAAA7N,EAAA4J,EAAAe,GACA3K,EAAA2K,GAAAf,IAMA1K,EAAA+O,QAAAJ,EAAA,SAAA7N,EAAA4J,EAAAe,GACAzL,EAAAkJ,IAAApI,EAAA2K,GAAA3K,EAAA2K,KAA0C3K,EAAA2K,GAAA,IAI1CzL,EAAAgP,QAAA,SAAAjI,GACA,MAAAA,GACA/G,EAAA+J,QAAAhD,GAAAyB,EAAA5I,KAAAmH,GACAS,EAAAT,GAAA/G,EAAAW,IAAAoG,EAAA/G,EAAA+K,UACA/K,EAAAmN,OAAApG,OAIA/G,EAAAiP,KAAA,SAAAlI,GACA,aAAAA,EAAA,EACAS,EAAAT,KAAAK,OAAApH,EAAAkH,KAAAH,GAAAK,QAKApH,EAAAkP,UAAA,SAAAnI,EAAAa,EAAAN,GACAM,EAAAC,EAAAD,EAAAN,EACA,IAAA6H,MAAAC,IAIA,OAHApP,GAAA6L,KAAA9E,EAAA,SAAA2D,EAAAe,EAAA1E,IACAa,EAAA8C,EAAAe,EAAA1E,GAAAoI,EAAAC,GAAAlJ,KAAAwE,MAEAyE,EAAAC,IASApP,EAAAqP,MAAArP,EAAAsP,KAAAtP,EAAAuP,KAAA,SAAA5H,EAAA0G,EAAAnB,GACA,aAAAvF,EACA,MAAA0G,GAAAnB,EAAAvF,EAAA,GACA3H,EAAAwP,QAAA7H,IAAAP,OAAAiH,GAFA,QAQArO,EAAAwP,QAAA,SAAA7H,EAAA0G,EAAAnB,GACA,MAAA1E,GAAA5I,KAAA+H,EAAA,EAAAU,KAAAC,IAAA,EAAAX,EAAAP,QAAA,MAAAiH,GAAAnB,EAAA,EAAAmB,MAKArO,EAAAyP,KAAA,SAAA9H,EAAA0G,EAAAnB,GACA,aAAAvF,EACA,MAAA0G,GAAAnB,EAAAvF,IAAAP,OAAA,GACApH,EAAA0P,KAAA/H,EAAAU,KAAAC,IAAA,EAAAX,EAAAP,OAAAiH,IAFA,QAQArO,EAAA0P,KAAA1P,EAAA2P,KAAA3P,EAAA4P,KAAA,SAAAjI,EAAA0G,EAAAnB,GACA,MAAA1E,GAAA5I,KAAA+H,EAAA,MAAA0G,GAAAnB,EAAA,EAAAmB,IAIArO,EAAA6P,QAAA,SAAAlI,GACA,MAAA3H,GAAAyM,OAAA9E,EAAA3H,EAAA+K,UAIA,IAAA+E,GAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,OADAC,MAAAhI,EAAA,EACAC,EAAA8H,GAAA,EAAA9I,EAAAU,EAAAiI,GAA4D3I,EAAAgB,EAAYA,IAAA,CACxE,GAAAsC,GAAAqF,EAAA3H,EACA,IAAAZ,EAAAkD,KAAA1K,EAAA+J,QAAAW,IAAA1K,EAAAoQ,YAAA1F,IAAA,CAEAsF,IAAAtF,EAAAoF,EAAApF,EAAAsF,EAAAC,GACA,IAAAI,GAAA,EAAAC,EAAA5F,EAAAtD,MAEA,KADA+I,EAAA/I,QAAAkJ,EACAA,EAAAD,GACAF,EAAAhI,KAAAuC,EAAA2F,SAEOJ,KACPE,EAAAhI,KAAAuC,GAGA,MAAAyF,GAIAnQ,GAAA8P,QAAA,SAAAnI,EAAAqI,GACA,MAAAF,GAAAnI,EAAAqI,GAAA,IAIAhQ,EAAAuQ,QAAA,SAAA5I,GACA,MAAA3H,GAAAwQ,WAAA7I,EAAAa,EAAA5I,KAAA6H,UAAA,KAMAzH,EAAAyQ,KAAAzQ,EAAA0Q,OAAA,SAAA/I,EAAAgJ,EAAA3J,EAAAM,GACAtH,EAAA4Q,UAAAD,KACArJ,EAAAN,EACAA,EAAA2J,EACAA,GAAA,GAEA,MAAA3J,MAAAa,EAAAb,EAAAM,GAGA,QAFAxG,MACA+P,KACAzI,EAAA,EAAAhB,EAAAU,EAAAH,GAA8CP,EAAAgB,EAAYA,IAAA,CAC1D,GAAAsC,GAAA/C,EAAAS,GACAyF,EAAA7G,IAAA0D,EAAAtC,EAAAT,GAAA+C,CACAiG,IACAvI,GAAAyI,IAAAhD,GAAA/M,EAAAoF,KAAAwE,GACAmG,EAAAhD,GACO7G,EACPhH,EAAAmJ,SAAA0H,EAAAhD,KACAgD,EAAA3K,KAAA2H,GACA/M,EAAAoF,KAAAwE,IAEO1K,EAAAmJ,SAAArI,EAAA4J,IACP5J,EAAAoF,KAAAwE,GAGA,MAAA5J,IAKAd,EAAA8Q,MAAA,WACA,MAAA9Q,GAAAyQ,KAAAX,EAAArI,WAAA,QAKAzH,EAAA+Q,aAAA,SAAApJ,GAGA,OAFA7G,MACAkQ,EAAAvJ,UAAAL,OACAgB,EAAA,EAAAhB,EAAAU,EAAAH,GAA8CP,EAAAgB,EAAYA,IAAA,CAC1D,GAAAF,GAAAP,EAAAS,EACA,KAAApI,EAAAmJ,SAAArI,EAAAoH,GAAA,CACA,OAAAmI,GAAA,EAAqBW,EAAAX,GACrBrQ,EAAAmJ,SAAA1B,UAAA4I,GAAAnI,GADqCmI,KAGrCA,IAAAW,GAAAlQ,EAAAoF,KAAAgC,IAEA,MAAApH,IAKAd,EAAAwQ,WAAA,SAAA7I,GACA,GAAA+H,GAAAI,EAAArI,WAAA,OACA,OAAAzH,GAAAyM,OAAA9E,EAAA,SAAA+C,GACA,OAAA1K,EAAAmJ,SAAAuG,EAAAhF,MAMA1K,EAAAiR,IAAA,WACA,MAAAjR,GAAAkR,MAAAzJ,YAKAzH,EAAAkR,MAAA,SAAAvJ,GAIA,OAHAP,GAAAO,GAAA3H,EAAAsI,IAAAX,EAAAG,GAAAV,QAAA,EACAtG,EAAA0I,MAAApC,GAEAD,EAAA,EAAuBC,EAAAD,EAAgBA,IACvCrG,EAAAqG,GAAAnH,EAAAyN,MAAA9F,EAAAR,EAEA,OAAArG,IAMAd,EAAAmR,OAAA,SAAAnL,EAAAmH,GAEA,OADArM,MACAsH,EAAA,EAAAhB,EAAAU,EAAA9B,GAA6CoB,EAAAgB,EAAYA,IACzD+E,EACArM,EAAAkF,EAAAoC,IAAA+E,EAAA/E,GAEAtH,EAAAkF,EAAAoC,GAAA,IAAApC,EAAAoC,GAAA,EAGA,OAAAtH,IAiBAd,EAAAuM,UAAA7E,EAAA,GACA1H,EAAAoR,cAAA1J,EAAA,IAIA1H,EAAAiI,YAAA,SAAAN,EAAAZ,EAAAC,EAAAM,GACAN,EAAAa,EAAAb,EAAAM,EAAA,EAGA,KAFA,GAAAoD,GAAA1D,EAAAD,GACAsK,EAAA,EAAAC,EAAAxJ,EAAAH,GACA2J,EAAAD,GAAA,CACA,GAAAE,GAAAlJ,KAAAmJ,OAAAH,EAAAC,GAAA,EACAtK,GAAAW,EAAA4J,IAAA7G,EAAA2G,EAAAE,EAAA,EAAsDD,EAAAC,EAEtD,MAAAF,IAgCArR,EAAAoN,QAAArF,EAAA,EAAA/H,EAAAuM,UAAAvM,EAAAiI,aACAjI,EAAAyR,YAAA1J,EAAA,GAAA/H,EAAAoR,eAKApR,EAAA0R,MAAA,SAAAC,EAAAC,EAAAC,GACA,MAAAD,IACAA,EAAAD,GAAA,EACAA,EAAA,GAEAE,KAAA,CAKA,QAHAzK,GAAAiB,KAAAC,IAAAD,KAAAyJ,MAAAF,EAAAD,GAAAE,GAAA,GACAH,EAAAlI,MAAApC,GAEAe,EAAA,EAAqBf,EAAAe,EAAcA,IAAAwJ,GAAAE,EACnCH,EAAAvJ,GAAAwJ,CAGA,OAAAD,GAQA,IAAAK,GAAA,SAAAC,EAAAC,EAAA3K,EAAA4K,EAAA3E,GACA,KAAA2E,YAAAD,IAAA,MAAAD,GAAAlH,MAAAxD,EAAAiG,EACA,IAAA4E,GAAAzG,EAAAsG,EAAAjJ,WACAjI,EAAAkR,EAAAlH,MAAAqH,EAAA5E,EACA,OAAAvN,GAAAgL,SAAAlK,KACAqR,EAMAnS,GAAAkK,KAAA,SAAAM,EAAAlD,GACA,GAAA2C,GAAAO,EAAAN,OAAAD,EAAA,MAAAA,GAAAa,MAAAN,EAAAhC,EAAA5I,KAAA6H,UAAA,GACA,KAAAzH,EAAA8I,WAAA0B,GAAA,SAAA4H,WAAA,oCACA,IAAA7E,GAAA/E,EAAA5I,KAAA6H,UAAA,GACA4K,EAAA,WACA,MAAAN,GAAAvH,EAAA6H,EAAA/K,EAAA+B,KAAAkE,EAAA+E,OAAA9J,EAAA5I,KAAA6H,aAEA,OAAA4K,IAMArS,EAAAuS,QAAA,SAAA/H,GACA,GAAAgI,GAAAhK,EAAA5I,KAAA6H,UAAA,GACA4K,EAAA,WAGA,OAFAI,GAAA,EAAArL,EAAAoL,EAAApL,OACAmG,EAAA/D,MAAApC,GACAgB,EAAA,EAAqBhB,EAAAgB,EAAYA,IACjCmF,EAAAnF,GAAAoK,EAAApK,KAAApI,EAAAyH,UAAAgL,KAAAD,EAAApK,EAEA,MAAAqK,EAAAhL,UAAAL,QAAAmG,EAAArH,KAAAuB,UAAAgL,KACA,OAAAV,GAAAvH,EAAA6H,EAAAhJ,UAAAkE,GAEA,OAAA8E,IAMArS,EAAA0S,QAAA,SAAA3L,GACA,GAAAqB,GAAAqD,EAAArE,EAAAK,UAAAL,MACA,OAAAA,EAAA,SAAAuL,OAAA,wCACA,KAAAvK,EAAA,EAAehB,EAAAgB,EAAYA,IAC3BqD,EAAAhE,UAAAW,GACArB,EAAA0E,GAAAzL,EAAAkK,KAAAnD,EAAA0E,GAAA1E,EAEA,OAAAA,IAIA/G,EAAA4S,QAAA,SAAApI,EAAAqI,GACA,GAAAD,GAAA,SAAAnH,GACA,GAAAqH,GAAAF,EAAAE,MACAC,EAAA,IAAAF,IAAA/H,MAAAzB,KAAA5B,WAAAgE,EAEA,OADAzL,GAAAkJ,IAAA4J,EAAAC,KAAAD,EAAAC,GAAAvI,EAAAM,MAAAzB,KAAA5B,YACAqL,EAAAC,GAGA,OADAH,GAAAE,SACAF,GAKA5S,EAAAgT,MAAA,SAAAxI,EAAAyI,GACA,GAAA1F,GAAA/E,EAAA5I,KAAA6H,UAAA,EACA,OAAAyL,YAAA,WACA,MAAA1I,GAAAM,MAAA,KAAAyC,IACK0F,IAKLjT,EAAAmT,MAAAnT,EAAAuS,QAAAvS,EAAAgT,MAAAhT,EAAA,GAOAA,EAAAoT,SAAA,SAAA5I,EAAAyI,EAAAI,GACA,GAAA/L,GAAAiG,EAAAzM,EACAwS,EAAA,KACAC,EAAA,CACAF,UACA,IAAAG,GAAA,WACAD,EAAAF,EAAAI,WAAA,IAAAzT,EAAA0T,MACAJ,EAAA,KACAxS,EAAA0J,EAAAM,MAAAxD,EAAAiG,GACA+F,IAAAhM,EAAAiG,EAAA,MAEA,mBACA,GAAAmG,GAAA1T,EAAA0T,KACAH,IAAAF,EAAAI,WAAA,IAAAF,EAAAG,EACA,IAAAC,GAAAV,GAAAS,EAAAH,EAcA,OAbAjM,GAAA+B,KACAkE,EAAA9F,UACA,GAAAkM,KAAAV,GACAK,IACAM,aAAAN,GACAA,EAAA,MAEAC,EAAAG,EACA5S,EAAA0J,EAAAM,MAAAxD,EAAAiG,GACA+F,IAAAhM,EAAAiG,EAAA,OACO+F,GAAAD,EAAAQ,YAAA,IACPP,EAAAJ,WAAAM,EAAAG,IAEA7S,IAQAd,EAAA8T,SAAA,SAAAtJ,EAAAyI,EAAAc,GACA,GAAAT,GAAA/F,EAAAjG,EAAA0M,EAAAlT,EAEA0S,EAAA,WACA,GAAA/D,GAAAzP,EAAA0T,MAAAM,CAEAf,GAAAxD,MAAA,EACA6D,EAAAJ,WAAAM,EAAAP,EAAAxD,IAEA6D,EAAA,KACAS,IACAjT,EAAA0J,EAAAM,MAAAxD,EAAAiG,GACA+F,IAAAhM,EAAAiG,EAAA,QAKA,mBACAjG,EAAA+B,KACAkE,EAAA9F,UACAuM,EAAAhU,EAAA0T,KACA,IAAAO,GAAAF,IAAAT,CAOA,OANAA,OAAAJ,WAAAM,EAAAP,IACAgB,IACAnT,EAAA0J,EAAAM,MAAAxD,EAAAiG,GACAjG,EAAAiG,EAAA,MAGAzM,IAOAd,EAAAkU,KAAA,SAAA1J,EAAA2J,GACA,MAAAnU,GAAAuS,QAAA4B,EAAA3J,IAIAxK,EAAA2M,OAAA,SAAA/E,GACA,kBACA,OAAAA,EAAAkD,MAAAzB,KAAA5B,aAMAzH,EAAA4C,QAAA,WACA,GAAA2K,GAAA9F,UACAkK,EAAApE,EAAAnG,OAAA,CACA,mBAGA,IAFA,GAAAgB,GAAAuJ,EACA7Q,EAAAyM,EAAAoE,GAAA7G,MAAAzB,KAAA5B,WACAW,KAAAtH,EAAAyM,EAAAnF,GAAAxI,KAAAyJ,KAAAvI,EACA,OAAAA,KAKAd,EAAAoU,MAAA,SAAAC,EAAA7J,GACA,kBACA,QAAA6J,EAAA,EACA7J,EAAAM,MAAAzB,KAAA5B,WADA,SAOAzH,EAAAsU,OAAA,SAAAD,EAAA7J,GACA,GAAAvD,EACA,mBAKA,QAJAoN,EAAA,IACApN,EAAAuD,EAAAM,MAAAzB,KAAA5B,YAEA,GAAA4M,IAAA7J,EAAA,MACAvD,IAMAjH,EAAAuU,KAAAvU,EAAAuS,QAAAvS,EAAAsU,OAAA,EAMA,IAAAE,KAAqB5K,SAAA,MAAe6K,qBAAA,YACpC9L,GAAA,qCACA,yDAqBA3I,GAAAkH,KAAA,SAAAH,GACA,IAAA/G,EAAAgL,SAAAjE,GAAA,QACA,IAAAiD,EAAA,MAAAA,GAAAjD,EACA,IAAAG,KACA,QAAAuE,KAAA1E,GAAA/G,EAAAkJ,IAAAnC,EAAA0E,IAAAvE,EAAAhB,KAAAuF,EAGA,OADA+I,IAAA/L,EAAA1B,EAAAG,GACAA,GAIAlH,EAAA0U,QAAA,SAAA3N,GACA,IAAA/G,EAAAgL,SAAAjE,GAAA,QACA,IAAAG,KACA,QAAAuE,KAAA1E,GAAAG,EAAAhB,KAAAuF,EAGA,OADA+I,IAAA/L,EAAA1B,EAAAG,GACAA,GAIAlH,EAAAmN,OAAA,SAAApG,GAIA,OAHAG,GAAAlH,EAAAkH,KAAAH,GACAK,EAAAF,EAAAE,OACA+F,EAAA3D,MAAApC,GACAgB,EAAA,EAAmBhB,EAAAgB,EAAYA,IAC/B+E,EAAA/E,GAAArB,EAAAG,EAAAkB,GAEA,OAAA+E,IAKAnN,EAAA2U,UAAA,SAAA5N,EAAAC,EAAAM,GACAN,EAAAa,EAAAb,EAAAM,EAKA,QADAD,GAHAH,EAAAlH,EAAAkH,KAAAH,GACAK,EAAAF,EAAAE,OACA2E,KAEA5E,EAAA,EAAyBC,EAAAD,EAAgBA,IACzCE,EAAAH,EAAAC,GACA4E,EAAA1E,GAAAL,EAAAD,EAAAM,KAAAN,EAEA,OAAAgF,IAIA/L,EAAA4U,MAAA,SAAA7N,GAIA,OAHAG,GAAAlH,EAAAkH,KAAAH,GACAK,EAAAF,EAAAE,OACAwN,EAAApL,MAAApC,GACAgB,EAAA,EAAmBhB,EAAAgB,EAAYA,IAC/BwM,EAAAxM,IAAAlB,EAAAkB,GAAArB,EAAAG,EAAAkB,IAEA,OAAAwM,IAIA5U,EAAA6U,OAAA,SAAA9N,GAGA,OAFAjG,MACAoG,EAAAlH,EAAAkH,KAAAH,GACAqB,EAAA,EAAAhB,EAAAF,EAAAE,OAAyCA,EAAAgB,EAAYA,IACrDtH,EAAAiG,EAAAG,EAAAkB,KAAAlB,EAAAkB,EAEA,OAAAtH,IAKAd,EAAA8U,UAAA9U,EAAA+U,QAAA,SAAAhO,GACA,GAAAiO,KACA,QAAAvJ,KAAA1E,GACA/G,EAAA8I,WAAA/B,EAAA0E,KAAAuJ,EAAA9O,KAAAuF,EAEA,OAAAuJ,GAAAzG,QAIAvO,EAAAiV,OAAA7J,EAAApL,EAAA0U,SAIA1U,EAAAkV,UAAAlV,EAAAmV,OAAA/J,EAAApL,EAAAkH,MAGAlH,EAAAwM,QAAA,SAAAzF,EAAAa,EAAAN,GACAM,EAAAC,EAAAD,EAAAN,EAEA,QADAmE,GAAAvE,EAAAlH,EAAAkH,KAAAH,GACAqB,EAAA,EAAAhB,EAAAF,EAAAE,OAAyCA,EAAAgB,EAAYA,IAErD,GADAqD,EAAAvE,EAAAkB,GACAR,EAAAb,EAAA0E,KAAA1E,GAAA,MAAA0E,IAKAzL,EAAAoV,KAAA,SAAAjE,EAAAkE,EAAA/N,GACA,GAAmBN,GAAAE,EAAnBpG,KAAmBiG,EAAAoK,CACnB,UAAApK,EAAA,MAAAjG,EACAd,GAAA8I,WAAAuM,IACAnO,EAAAlH,EAAA0U,QAAA3N,GACAC,EAAAO,EAAA8N,EAAA/N,KAEAJ,EAAA4I,EAAArI,WAAA,QACAT,EAAA,SAAA0D,EAAAe,EAAA1E,GAA4C,MAAA0E,KAAA1E,IAC5CA,EAAA0C,OAAA1C,GAEA,QAAAqB,GAAA,EAAAhB,EAAAF,EAAAE,OAAyCA,EAAAgB,EAAYA,IAAA,CACrD,GAAAqD,GAAAvE,EAAAkB,GACAsC,EAAA3D,EAAA0E,EACAzE,GAAA0D,EAAAe,EAAA1E,KAAAjG,EAAA2K,GAAAf,GAEA,MAAA5J,IAIAd,EAAAsV,KAAA,SAAAvO,EAAAC,EAAAM,GACA,GAAAtH,EAAA8I,WAAA9B,GACAA,EAAAhH,EAAA2M,OAAA3F,OACK,CACL,GAAAE,GAAAlH,EAAAW,IAAAmP,EAAArI,WAAA,QAAA8N,OACAvO,GAAA,SAAA0D,EAAAe,GACA,OAAAzL,EAAAmJ,SAAAjC,EAAAuE,IAGA,MAAAzL,GAAAoV,KAAArO,EAAAC,EAAAM,IAIAtH,EAAAwV,SAAApK,EAAApL,EAAA0U,SAAA,GAKA1U,EAAAoK,OAAA,SAAArB,EAAA0M,GACA,GAAA3U,GAAA4K,EAAA3C,EAEA,OADA0M,IAAAzV,EAAAkV,UAAApU,EAAA2U,GACA3U,GAIAd,EAAA0V,MAAA,SAAA3O,GACA,MAAA/G,GAAAgL,SAAAjE,GACA/G,EAAA+J,QAAAhD,KAAAyB,QAAAxI,EAAAiV,UAAqDlO,GADrDA,GAOA/G,EAAA2V,IAAA,SAAA5O,EAAA6O,GAEA,MADAA,GAAA7O,GACAA,GAIA/G,EAAA6V,QAAA,SAAA1E,EAAAxD,GACA,GAAAzG,GAAAlH,EAAAkH,KAAAyG,GAAAvG,EAAAF,EAAAE,MACA,UAAA+J,EAAA,OAAA/J,CAEA,QADAL,GAAA0C,OAAA0H,GACA/I,EAAA,EAAmBhB,EAAAgB,EAAYA,IAAA,CAC/B,GAAAqD,GAAAvE,EAAAkB,EACA,IAAAuF,EAAAlC,KAAA1E,EAAA0E,UAAA1E,IAAA,SAEA,SAKA,IAAA+O,GAAA,SAAAnS,EAAA+K,EAAAqH,EAAAC,GAGA,GAAArS,IAAA+K,EAAA,WAAA/K,GAAA,EAAAA,IAAA,EAAA+K,CAEA,UAAA/K,GAAA,MAAA+K,EAAA,MAAA/K,KAAA+K,CAEA/K,aAAA3D,KAAA2D,IAAA2G,UACAoE,YAAA1O,KAAA0O,IAAApE,SAEA,IAAA2L,GAAArM,EAAAhK,KAAA+D,EACA,IAAAsS,IAAArM,EAAAhK,KAAA8O,GAAA,QACA,QAAAuH,GAEA,sBAEA,sBAGA,SAAAtS,GAAA,GAAA+K,CACA,uBAGA,OAAA/K,QAAA+K,OAEA,KAAA/K,EAAA,GAAAA,IAAA,EAAA+K,GAAA/K,KAAA+K,CACA,qBACA,uBAIA,OAAA/K,KAAA+K,EAGA,GAAAwH,GAAA,mBAAAD,CACA,KAAAC,EAAA,CACA,mBAAAvS,IAAA,gBAAA+K,GAAA,QAIA,IAAAyH,GAAAxS,EAAAiF,YAAAwN,EAAA1H,EAAA9F,WACA,IAAAuN,IAAAC,KAAApW,EAAA8I,WAAAqN,oBACAnW,EAAA8I,WAAAsN,qBACA,eAAAzS,IAAA,eAAA+K,GACA,SAQAqH,QACAC,OAEA,KADA,GAAA5O,GAAA2O,EAAA3O,OACAA,KAGA,GAAA2O,EAAA3O,KAAAzD,EAAA,MAAAqS,GAAA5O,KAAAsH,CAQA,IAJAqH,EAAA7P,KAAAvC,GACAqS,EAAA9P,KAAAwI,GAGAwH,EAAA,CAGA,GADA9O,EAAAzD,EAAAyD,OACAA,IAAAsH,EAAAtH,OAAA,QAEA,MAAAA,KACA,IAAA0O,EAAAnS,EAAAyD,GAAAsH,EAAAtH,GAAA2O,EAAAC,GAAA,aAEK,CAEL,GAAAvK,GAAAvE,EAAAlH,EAAAkH,KAAAvD,EAGA,IAFAyD,EAAAF,EAAAE,OAEApH,EAAAkH,KAAAwH,GAAAtH,WAAA,QACA,MAAAA,KAGA,GADAqE,EAAAvE,EAAAE,IACApH,EAAAkJ,IAAAwF,EAAAjD,KAAAqK,EAAAnS,EAAA8H,GAAAiD,EAAAjD,GAAAsK,EAAAC,GAAA,SAMA,MAFAD,GAAAM,MACAL,EAAAK,OACA,EAIArW,GAAAsW,QAAA,SAAA3S,EAAA+K,GACA,MAAAoH,GAAAnS,EAAA+K,IAKA1O,EAAAuW,QAAA,SAAAxP,GACA,aAAAA,GAAA,EACAS,EAAAT,KAAA/G,EAAA+J,QAAAhD,IAAA/G,EAAAwW,SAAAzP,IAAA/G,EAAAoQ,YAAArJ,IAAA,IAAAA,EAAAK,OACA,IAAApH,EAAAkH,KAAAH,GAAAK,QAIApH,EAAAyW,UAAA,SAAA1P,GACA,SAAAA,GAAA,IAAAA,EAAA2P,WAKA1W,EAAA+J,QAAAD,GAAA,SAAA/C,GACA,yBAAA6C,EAAAhK,KAAAmH,IAIA/G,EAAAgL,SAAA,SAAAjE,GACA,GAAA4P,SAAA5P,EACA,oBAAA4P,GAAA,WAAAA,KAAA5P,GAIA/G,EAAA6L,MAAA,2EAAA+K,GACA5W,EAAA,KAAA4W,GAAA,SAAA7P,GACA,MAAA6C,GAAAhK,KAAAmH,KAAA,WAAA6P,EAAA,OAMA5W,EAAAoQ,YAAA3I,aACAzH,EAAAoQ,YAAA,SAAArJ,GACA,MAAA/G,GAAAkJ,IAAAnC,EAAA,YAMA,uCAAA8P,aACA7W,EAAA8I,WAAA,SAAA/B,GACA,wBAAAA,KAAA,IAKA/G,EAAA8W,SAAA,SAAA/P,GACA,MAAA+P,UAAA/P,KAAA3C,MAAAD,WAAA4C,KAIA/G,EAAAoE,MAAA,SAAA2C,GACA,MAAA/G,GAAA+W,SAAAhQ,YAIA/G,EAAA4Q,UAAA,SAAA7J,GACA,MAAAA,MAAA,GAAAA,KAAA,wBAAA6C,EAAAhK,KAAAmH,IAIA/G,EAAAgX,OAAA,SAAAjQ,GACA,cAAAA,GAIA/G,EAAAiX,YAAA,SAAAlQ,GACA,gBAAAA,GAKA/G,EAAAkJ,IAAA,SAAAnC,EAAA0E,GACA,aAAA1E,GAAA8C,EAAAjK,KAAAmH,EAAA0E,IAQAzL,EAAAkX,WAAA,WAEA,MADA9N,GAAApJ,EAAAsJ,EACAD,MAIArJ,EAAA+K,SAAA,SAAAL,GACA,MAAAA,IAIA1K,EAAAmX,SAAA,SAAAzM,GACA,kBACA,MAAAA,KAIA1K,EAAAoX,KAAA,aAEApX,EAAAkL,WAGAlL,EAAAqX,WAAA,SAAAtQ,GACA,aAAAA,EAAA,aAAqC,SAAA0E,GACrC,MAAA1E,GAAA0E,KAMAzL,EAAAiL,QAAAjL,EAAAsX,QAAA,SAAA3J,GAEA,MADAA,GAAA3N,EAAAkV,aAA0BvH,GAC1B,SAAA5G,GACA,MAAA/G,GAAA6V,QAAA9O,EAAA4G,KAKA3N,EAAAqU,MAAA,SAAAhG,EAAArH,EAAAM,GACA,GAAAiQ,GAAA/N,MAAAnB,KAAAC,IAAA,EAAA+F,GACArH,GAAAO,EAAAP,EAAAM,EAAA,EACA,QAAAc,GAAA,EAAmBiG,EAAAjG,EAAOA,IAAAmP,EAAAnP,GAAApB,EAAAoB,EAC1B,OAAAmP,IAIAvX,EAAAmO,OAAA,SAAA5F,EAAAD,GAKA,MAJA,OAAAA,IACAA,EAAAC,EACAA,EAAA,GAEAA,EAAAF,KAAAmJ,MAAAnJ,KAAA8F,UAAA7F,EAAAC,EAAA,KAIAvI,EAAA0T,IAAA8D,KAAA9D,KAAA,WACA,UAAA8D,OAAAC,UAIA,IAAAC,IACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SACAC,IAAA,UAEAC,EAAAjY,EAAA6U,OAAA6C,GAGAQ,EAAA,SAAAvX,GACA,GAAAwX,GAAA,SAAAC,GACA,MAAAzX,GAAAyX,IAGA7M,EAAA,MAAAvL,EAAAkH,KAAAvG,GAAA0X,KAAA,SACAC,EAAAC,OAAAhN,GACAiN,EAAAD,OAAAhN,EAAA,IACA,iBAAAkN,GAEA,MADAA,GAAA,MAAAA,EAAA,MAAAA,EACAH,EAAAI,KAAAD,KAAAnY,QAAAkY,EAAAL,GAAAM,GAGAzY,GAAA2Y,OAAAT,EAAAR,GACA1X,EAAA4Y,SAAAV,EAAAD,GAIAjY,EAAAc,OAAA,SAAAqQ,EAAAjG,EAAA2N,GACA,GAAAnO,GAAA,MAAAyG,EAAA,OAAAA,EAAAjG,EAIA,OAHA,UAAAR,IACAA,EAAAmO,GAEA7Y,EAAA8I,WAAA4B,KAAA9K,KAAAuR,GAAAzG,EAKA,IAAAoO,GAAA,CACA9Y,GAAA+Y,SAAA,SAAAC,GACA,GAAAtZ,KAAAoZ,EAAA,EACA,OAAAE,KAAAtZ,KAKAM,EAAAiZ,kBACAC,SAAA,kBACAC,YAAA,mBACAR,OAAA,mBAMA,IAAAS,GAAA,OAIAC,GACAtB,IAAA,IACAuB,KAAA,KACAC,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAGAvB,EAAA,4BAEAwB,EAAA,SAAAvB,GACA,WAAAiB,EAAAjB,GAOApY,GAAA4Z,SAAA,SAAAC,EAAAC,EAAAC,IACAD,GAAAC,IAAAD,EAAAC,GACAD,EAAA9Z,EAAAwV,YAA4BsE,EAAA9Z,EAAAiZ,iBAG5B,IAAAhO,GAAAsN,SACAuB,EAAAnB,QAAAS,GAAA7N,QACAuO,EAAAX,aAAAC,GAAA7N,QACAuO,EAAAZ,UAAAE,GAAA7N,QACA8M,KAAA,eAGAlR,EAAA,EACAoE,EAAA,QACAsO,GAAAvZ,QAAA2K,EAAA,SAAAmN,EAAAO,EAAAQ,EAAAD,EAAAc,GAaA,MAZAzO,IAAAsO,EAAArR,MAAArB,EAAA6S,GAAA1Z,QAAA6X,EAAAwB,GACAxS,EAAA6S,EAAA5B,EAAAhR,OAEAuR,EACApN,GAAA,cAAAoN,EAAA,iCACOQ,EACP5N,GAAA,cAAA4N,EAAA,uBACOD,IACP3N,GAAA,OAAqB2N,EAAA,YAIrBd,IAEA7M,GAAA,OAGAuO,EAAAG,WAAA1O,EAAA,mBAAoDA,EAAA,OAEpDA,EAAA,4FAEAA,EAAA,eAEA,KACA,GAAA2O,GAAA,GAAAvQ,UAAAmQ,EAAAG,UAAA,UAAA1O,GACK,MAAA4O,GAEL,KADAA,GAAA5O,SACA4O,EAGA,GAAAP,GAAA,SAAAQ,GACA,MAAAF,GAAAta,KAAAyJ,KAAA+Q,EAAApa,IAIAqa,EAAAP,EAAAG,UAAA,KAGA,OAFAL,GAAArO,OAAA,YAAA8O,EAAA,OAAkD9O,EAAA,IAElDqO,GAIA5Z,EAAAsa,MAAA,SAAAvT,GACA,GAAAwT,GAAAva,EAAA+G,EAEA,OADAwT,GAAAC,QAAA,EACAD,EAUA,IAAAzZ,GAAA,SAAAyZ,EAAAxT,GACA,MAAAwT,GAAAC,OAAAxa,EAAA+G,GAAAuT,QAAAvT,EAIA/G,GAAAya,MAAA,SAAA1T,GACA/G,EAAA6L,KAAA7L,EAAA8U,UAAA/N,GAAA,SAAA6P,GACA,GAAApM,GAAAxK,EAAA4W,GAAA7P,EAAA6P,EACA5W,GAAA+I,UAAA6N,GAAA,WACA,GAAArJ,IAAAlE,KAAAiB,SAEA,OADApE,GAAA4E,MAAAyC,EAAA9F,WACA3G,EAAAuI,KAAAmB,EAAAM,MAAA9K,EAAAuN,QAMAvN,EAAAya,MAAAza,GAGAA,EAAA6L,MAAA,mEAAA+K,GACA,GAAAtJ,GAAA/D,EAAAqN,EACA5W,GAAA+I,UAAA6N,GAAA,WACA,GAAA7P,GAAAsC,KAAAiB,QAGA,OAFAgD,GAAAxC,MAAA/D,EAAAU,WACA,UAAAmP,GAAA,WAAAA,GAAA,IAAA7P,EAAAK,cAAAL,GAAA,GACAjG,EAAAuI,KAAAtC,MAKA/G,EAAA6L,MAAA,kCAAA+K,GACA,GAAAtJ,GAAA/D,EAAAqN,EACA5W,GAAA+I,UAAA6N,GAAA,WACA,MAAA9V,GAAAuI,KAAAiE,EAAAxC,MAAAzB,KAAAiB,SAAA7C,eAKAzH,EAAA+I,UAAA2B,MAAA,WACA,MAAArB,MAAAiB,UAKAtK,EAAA+I,UAAA2R,QAAA1a,EAAA+I,UAAA4R,OAAA3a,EAAA+I,UAAA2B,MAEA1K,EAAA+I,UAAAa,SAAA,WACA,SAAAP,KAAAiB,UAWA5D,KAAAC,EAAA,WACA,MAAA3G,IACK8K,MAAAtL,EAAAkH,KAAAkU,SAAAjU,IAAAlH,EAAAD,QAAAmH,MAEJ/G,KAAAyJ,OHgRK,SAAS5J,EAAQD,EAASH,GItwDhCI,EAAAD,QAAAH,EAAA,IJiyDM,SAASI,EAAQD,GK9uDvB,QAAAS,MAIA,QAAA4a,GAAAlX,GACA0F,KAAAqB,MAAA/G,EAKA,QAAAmX,MA1DArb,EAAAD,QAAAS,CAGA,IAAAyV,GAAAjM,OAAAW,OACA2Q,EAAA,WAA+B,SAAApI,OAAA,qBAC/ByE,EAAA,WAA+B,MAAA/N,MA8C/BwR,GAAA9R,UAAA2M,EAAAzV,EAAA8I,WAMA+R,EAAA/R,UAAA2M,EAAAzV,EAAA8I,WAYA9I,EAAA6a,QAAA,WACA,UAAAA,IAEA7a,EAAA8I,UAAA+R,QAAA7a,EAAA6a,QAWA7a,EAAA4a,KAAA,SAAAlX,GACA,UAAAkX,GAAAlX,IAEA1D,EAAA8I,UAAA8R,KAAA5a,EAAA4a,KAaA5a,EAAAwD,aAAA,SAAAE,GACA,aAAAA,EAAA,GAAAkX,GAAAlX,GACA,GAAAmX,IAEA7a,EAAA8I,UAAAtF,aAAAxD,EAAAwD,aAUAxD,EAAA+a,WAAA,SAAArX,GACA,MAAAA,GAAAsX,KAAAhb,EAAA6a,QAAA7a,EAAA4a,OAEA5a,EAAA8I,UAAAiS,WAAA/a,EAAA+a,WAWA/a,EAAAib,eAAAjb,EAAA+a,WACA/a,EAAA8I,UAAAmS,eAAAjb,EAAA+a,WAUA/a,EAAA8I,UAAAoS,WAAA,EACAL,EAAA/R,UAAAoS,WAAA,EAQAlb,EAAA8I,UAAAqS,QAAA,EACAP,EAAA9R,UAAAqS,QAAA,EAaAnb,EAAAob,GAAA,SAAA1X,GACA,MAAA1D,GAAA8I,UAAA8R,KAAAlX,IAEA1D,EAAA8I,UAAAsS,GAAApb,EAAAob,GAaApb,EAAA8I,UAAAuS,GAAAP,EAEAD,EAAA/R,UAAAuS,GAAAlE,EAEAyD,EAAA9R,UAAAuS,GAAA,SAAA5M,GACA,MAAAA,GAAA/N,IAAA0I,KAAAqB,QAeAzK,EAAA8I,UAAApI,IAAAoa,EACAD,EAAA/R,UAAApI,IAAAyW,EAEAyD,EAAA9R,UAAApI,IAAA,SAAAH,GACA,MAAA6I,MAAAgS,GAAA7a,EAAA6I,KAAAqB,SAaAzK,EAAA8I,UAAAuR,MAAAS,EACAD,EAAA/R,UAAAuR,MAAAlD,EAEAyD,EAAA9R,UAAAuR,MAAA,SAAA9Z,GACA,MAAAA,GAAA6I,KAAAqB,QAYAzK,EAAA8I,UAAAa,SAAAmR,EAEAD,EAAA/R,UAAAa,SAAA,WACA,uBAGAiR,EAAA9R,UAAAa,SAAA,WACA,oBAAAP,KAAAqB,MAAA,KAYAzK,EAAA8I,UAAAuN,QAAAyE,EAEAD,EAAA/R,UAAAuN,QAAA,SAAA5H,GACA,MAAAA,GAAAyM,WAGAN,EAAA9R,UAAAuN,QAAA,SAAA5H,GACA,MAAAA,GAAA0M,QACA1M,EAAAhE,QAAArB,KAAAqB,OAeAzK,EAAA8I,UAAAtI,IAAAsa,EAEAD,EAAA/R,UAAAtI,IAAA,WACA,SAAA2R,WAAA,0CAGAyI,EAAA9R,UAAAtI,IAAA,WACA,MAAA4I,MAAAqB,OAWAzK,EAAA8I,UAAA5D,UAAA4V,EAEAD,EAAA/R,UAAA5D,UAAA,SAAAxB,GACA,MAAAA,IAGAkX,EAAA9R,UAAA5D,UAAA,SAAAnF,GACA,MAAAqJ,MAAAqB,OAWAzK,EAAA8I,UAAAwS,OAAAR,EAEAD,EAAA/R,UAAAwS,OAAA,SAAA/a,GACA,MAAAA,MAGAqa,EAAA9R,UAAAwS,OAAA,SAAAvb,GACA,MAAAqJ,OAUApJ,EAAA8I,UAAAyS,KAAAT,EAEAD,EAAA/R,UAAAyS,KAAA,SAAAC,GACA,MAAAA,GAAAX,WAGAD,EAAA9R,UAAAyS,KAAA,SAAAC,GACA,MAAAA,GAAAZ,KAAAxR,KAAAqB,QAUAzK,EAAA8I,UAAA4R,OAAAI,EAEAD,EAAA/R,UAAA4R,OAAA,WACA,OAAUe,QAAA,2BAGVb,EAAA9R,UAAA4R,OAAA,WACA,OAAUe,QAAA,sBACVhR,MAAArB,KAAAqB,SL8zDM,SAASjL,EAAQD,EAASH,GM/pEhCI,EAAAD,QAAAH,EAAA,IN0rEM,SAASI,EAAQD,GO3oEvB,QAAAU,MAGA,QAAA0B,GAAA+B,GACA0F,KAAAqB,MAAA/G,EAIA,QAAApC,GAAAoC,GACA0F,KAAAqB,MAAA/G,EArDAlE,EAAAD,QAAAU,CAGA,IAAAwV,GAAAjM,OAAAW,OACA2Q,EAAA,WAA+B,SAAApI,OAAA,qBAC/ByE,EAAA,WAA+B,MAAA/N,MAyC/BzH,GAAAmH,UAAA2M,EAAAxV,EAAA6I,WAKAxH,EAAAwH,UAAA2M,EAAAxV,EAAA6I,WAaA7I,EAAA0B,KAAA,SAAA+B,GACA,UAAA/B,GAAA+B,IAEAzD,EAAA6I,UAAAnH,KAAA1B,EAAA0B,KASA1B,EAAAqB,MAAA,SAAAoC,GACA,UAAApC,GAAAoC,IAEAzD,EAAA6I,UAAAxH,MAAArB,EAAAqB,MAaArB,EAAAuD,aAAA,SAAAE,GACA,aAAAA,EAAA0F,KAAA9H,MAAAoC,GACA0F,KAAAzH,KAAA+B,IAEAzD,EAAA6I,UAAAtF,aAAAvD,EAAAuD,aAOAvD,EAAAgb,eAAA,SAAAvX,GACA,MAAAA,GAAAsX,KAAA5R,KAAAzH,KAAAsI,KAAAb,WAAA9H,MAAA2I,KAAAb,QAWAnJ,EAAA6I,UAAA1H,QAAA,EACAO,EAAAmH,UAAA1H,QAAA,EAOAnB,EAAA6I,UAAA4S,SAAA,EACApa,EAAAwH,UAAA4S,SAAA,EAaAzb,EAAAmb,GAAA,SAAA1X,GACA,MAAA0F,MAAA9H,MAAAoC,IAEAzD,EAAA6I,UAAAsS,GAAAnb,EAAAmb,GAaAnb,EAAA6I,UAAAuS,GAAAP,EAEAnZ,EAAAmH,UAAAuS,GAAA,SAAA5M,GACA,MAAArF,OAGA9H,EAAAwH,UAAAuS,GAAA,SAAA5M,GACA,MAAAA,GAAA/N,IAAA0I,KAAAqB,QAaAxK,EAAA6I,UAAApI,IAAAoa,EACAnZ,EAAAmH,UAAApI,IAAAyW,EAEA7V,EAAAwH,UAAApI,IAAA,SAAAH,GACA,MAAA6I,MAAAgS,GAAA7a,EAAA6I,KAAAqB,SAaAxK,EAAA6I,UAAAuR,MAAAS,EACAnZ,EAAAmH,UAAAuR,MAAAlD,EAEA7V,EAAAwH,UAAAuR,MAAA,SAAA9Z,GACA,MAAAA,GAAA6I,KAAAqB,QAYAxK,EAAA6I,UAAAa,SAAAmR,EAEAnZ,EAAAmH,UAAAa,SAAA,WACA,qBAAAP,KAAAqB,MAAA,KAGAnJ,EAAAwH,UAAAa,SAAA,WACA,sBAAAP,KAAAqB,MAAA,KAaAxK,EAAA6I,UAAAuN,QAAAyE,EAEAnZ,EAAAmH,UAAAuN,QAAA,SAAA3S,GACA,MAAAA,GAAAtC,QAAAsC,EAAA+G,QAAArB,KAAAqB,OAGAnJ,EAAAwH,UAAAuN,QAAA,SAAA3S,GACA,MAAAA,GAAAgY,SAAAhY,EAAA+G,QAAArB,KAAAqB,OAgBAxK,EAAA6I,UAAAtI,IAAAsa,EAEAnZ,EAAAmH,UAAAtI,IAAA,WACA,SAAA2R,WAAA,0CAGA7Q,EAAAwH,UAAAtI,IAAA,WACA,MAAA4I,MAAAqB,OAWAxK,EAAA6I,UAAA5D,UAAA4V,EAEAnZ,EAAAmH,UAAA5D,UAAA,SAAAxB,GACA,MAAAA,IAGApC,EAAAwH,UAAA5D,UAAA,SAAAnF,GACA,MAAAqJ,MAAAqB,OAWAxK,EAAA6I,UAAAwS,OAAAR,EACAxZ,EAAAwH,UAAAwS,OAAAnE,EAEAxV,EAAAmH,UAAAwS,OAAA,SAAA/a,GACA,MAAAA,GAAA6I,KAAAqB,QASAxK,EAAA6I,UAAA6S,MAAA,WACA,MAAAvS,MAAAqB,OAYAxK,EAAA6I,UAAAkS,KAAAF,EAEAnZ,EAAAmH,UAAAkS,KAAA,SAAAza,EAAAR,GACA,MAAAQ,GAAA6I,KAAAqB,QAGAnJ,EAAAwH,UAAAkS,KAAA,SAAAjb,EAAAY,GACA,MAAAA,GAAAyI,KAAAqB,QASAxK,EAAA6I,UAAAyS,KAAAT,EAEAnZ,EAAAmH,UAAAyS,KAAA,SAAAC,GACA,MAAAA,GAAA7Z,KAAAyH,KAAAqB,QAGAnJ,EAAAwH,UAAAyS,KAAA,SAAAC,GACA,MAAAA,GAAAla,MAAA8H,KAAAqB,QAUAxK,EAAA6I,UAAA8S,KAAAd,EAEAnZ,EAAAmH,UAAA8S,KAAA,WACA,MAAAxS,MAAA9H,MAAA8H,KAAAqB,QAGAnJ,EAAAwH,UAAA8S,KAAA,WACA,MAAAxS,MAAAzH,KAAAyH,KAAAqB,QAUAxK,EAAA6I,UAAA+S,MAAAf,EAEAnZ,EAAAmH,UAAA+S,MAAA,SAAAtb,EAAAR,GACA,MAAAqJ,MAAAzH,KAAApB,EAAA6I,KAAAqB,SAGAnJ,EAAAwH,UAAA+S,MAAA,SAAA9b,EAAAY,GACA,MAAAyI,MAAA9H,MAAAX,EAAAyI,KAAAqB,SAUAxK,EAAA6I,UAAAzH,QAAAyZ,EACAxZ,EAAAwH,UAAAzH,QAAA8V,EAEAxV,EAAAmH,UAAAzH,QAAA,SAAAd,GACA,MAAA6I,MAAAzH,KAAApB,EAAA6I,KAAAqB","file":"index.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Maybe = __webpack_require__(2);\n\tvar Either = __webpack_require__(4);\n\t\n\tvar proxify = function proxify(url) {\n\t  return '//crossorigin.me/' + url;\n\t};\n\tvar unproxify = function unproxify(url) {\n\t  return url.replace(/http(s)?:\\/\\/crossorigin.me\\//, '');\n\t};\n\t\n\tvar Future = function Future(f) {\n\t  return {\n\t    get: function get() {\n\t      return f(function (x) {\n\t        return x;\n\t      });\n\t    },\n\t    map: function map(g) {\n\t      return Future(function (k) {\n\t        return f(function (result) {\n\t          return k(g(result));\n\t        });\n\t      });\n\t    },\n\t    flatMap: function flatMap(h) {\n\t      return Future(function (k) {\n\t        return f(function (result) {\n\t          return h(result).map(k).get();\n\t        });\n\t      });\n\t    }\n\t  };\n\t};\n\t\n\tvar FutureEither = function FutureEither(future) {\n\t  return {\n\t    future: future,\n\t    get: future.get,\n\t    getOrLeftMap: function getOrLeftMap(f) {\n\t      return future.map(function (either) {\n\t        return either.isLeft ? either.leftMap(f) : either.get();\n\t      }).get();\n\t    },\n\t    map: function map(f) {\n\t      return FutureEither(future.map(function (either) {\n\t        return either.isLeft ? either : Either.Right(f(either.get()));\n\t      }));\n\t    },\n\t    flatMap: function flatMap(f) {\n\t      var result = future.flatMap(function (either) {\n\t        return either.isLeft ? Future(function (g) {\n\t          return g(either);\n\t        }) : f(either.get()).future;\n\t      });\n\t      return FutureEither(result);\n\t    }\n\t  };\n\t};\n\t\n\tvar request = function request(url) {\n\t  return FutureEither(Future(function (f) {\n\t    var req = new XMLHttpRequest();\n\t    var handleError = function handleError() {\n\t      return Either.Left('Error ' + req.status + ' – ' + req.statusText + ' while loading ' + url);\n\t    };\n\t    req.onload = function () {\n\t      return f(req.status == 200 ? Either.Right(req.responseXML) : handleError());\n\t    };\n\t    req.onerror = handleError;\n\t    req.open(\"GET\", proxify(url), true);\n\t    req.responseType = \"document\";\n\t    req.overrideMimeType(\"text/html\");\n\t    req.send();\n\t  }));\n\t};\n\t\n\tvar YorckInfos = function YorckInfos(title, url) {\n\t  var rotateArticle = function rotateArticle(title) {\n\t    if (title.includes(', Der')) {\n\t      return 'Der ' + title.replace(', Der', '');\n\t    } else if (title.includes(', Die')) {\n\t      return 'Die ' + title.replace(', Die', '');\n\t    } else if (title.includes(', Das')) {\n\t      return 'Das ' + title.replace(', Das', '');\n\t    } else {\n\t      return title;\n\t    }\n\t  };\n\t\n\t  var remove2And3D = function remove2And3D(title) {\n\t    if (title.includes('2D')) {\n\t      return title.replace('2D', '');\n\t    } else if (title.includes('3D')) {\n\t      return title.replace('3D', '');\n\t    } else {\n\t      return title;\n\t    }\n\t  };\n\t\n\t  var correctTitle = _.compose(remove2And3D, rotateArticle);\n\t\n\t  return {\n\t    title: rotateArticle(title),\n\t    searchableTitle: correctTitle(title),\n\t    url: url\n\t  };\n\t};\n\t\n\tvar Movie = function Movie(yorckInfos, imdbInfos) {\n\t  return {\n\t    yorck: yorckInfos,\n\t    imdb: imdbInfos\n\t  };\n\t};\n\t\n\tvar YorckPage = function YorckPage(doc) {\n\t  return {\n\t    movieAnchors: _(doc.querySelectorAll('.films a'))\n\t  };\n\t};\n\t\n\tvar ImdbSearchPage = function ImdbSearchPage(doc) {\n\t  return {\n\t    moviePathMaybe: Maybe.fromNullable(doc.querySelector('.findList .findResult a')).map(function (a) {\n\t      return a.pathname;\n\t    })\n\t  };\n\t};\n\t\n\tvar ImdbDetailPage = function ImdbDetailPage(doc) {\n\t  var $ = function $(selector) {\n\t    return doc.querySelector(selector) || { textContent: \"n/a\" };\n\t  };\n\t\n\t  return {\n\t    url: unproxify(doc.URL),\n\t    rating: (function () {\n\t      var rating = parseFloat($('span[itemprop=\"ratingValue\"]').textContent);\n\t      return isNaN(rating) ? 0 : rating;\n\t    })(),\n\t    ratingsCount: $('span[itemprop=\"ratingCount\"]').textContent.trim(),\n\t    title: $('*[itemprop=\"name\"]').textContent\n\t  };\n\t};\n\t\n\tvar getYorckInfos = function getYorckInfos() {\n\t  var yorckFilmsUrl = \"http://www.yorck.de/mobile/filme\";\n\t\n\t  var extractInfos = function extractInfos(yp) {\n\t    return yp.movieAnchors.map(function (_ref) {\n\t      var textContent = _ref.textContent;\n\t      var href = _ref.href;\n\t      return YorckInfos(textContent, href);\n\t    });\n\t  };\n\t\n\t  return request(yorckFilmsUrl).map(YorckPage).map(extractInfos);\n\t};\n\t\n\tvar getMovie = function getMovie(yorckInfos) {\n\t  var imdbUrl = \"http://www.imdb.com\";\n\t  var searchUrl = imdbUrl + '/find?q=' + encodeURIComponent(yorckInfos.searchableTitle);\n\t\n\t  var searchPageEitherFuture = request(searchUrl);\n\t\n\t  return searchPageEitherFuture.flatMap(function (searchPage) {\n\t    return ImdbSearchPage(searchPage).moviePathMaybe.map(function (pathname) {\n\t      return request(imdbUrl + pathname);\n\t    }).getOrElse(FutureEither(Future(function (f) {\n\t      return f(Either.Left('Couldn\\'t find movie \"' + yorckInfos.title + '\" on Imdb at ' + searchUrl));\n\t    }))).map(function (detailPage) {\n\t      return Movie(yorckInfos, ImdbDetailPage(detailPage));\n\t    });\n\t  });\n\t};\n\t\n\tvar showOnPage = function showOnPage(movies) {\n\t  var moviesTable = document.getElementById(\"movies\");\n\t  var moviesHtml = '';\n\t  movies.forEach(function (movie) {\n\t    return moviesHtml += '\\n      <tr>\\n        <td>\\n          ' + movie.imdb.rating + ' (' + movie.imdb.ratingsCount + ')\\n        </td>\\n        <td>\\n          <a href=\"' + movie.imdb.url + '\">\\n            ' + movie.imdb.title + '\\n          </a>\\n        </td>\\n        <td>\\n          <a href=\"' + movie.yorck.url + '\">\\n            ' + movie.yorck.title + '\\n          </a>\\n        </td>\\n      </tr>';\n\t  });\n\t  moviesTable.innerHTML = moviesHtml;\n\t};\n\t\n\tvar showPageLoadError = function showPageLoadError(errorMessage) {\n\t  return document.getElementById(\"errors\").innerHTML += '<p>' + errorMessage + '</p>';\n\t};\n\t\n\tvar movies = (function () {\n\t  var list = [];\n\t  return {\n\t    add: function add(movie) {\n\t      list.push(movie);\n\t      list = _(list).sortBy(function (m) {\n\t        return m.imdb.rating;\n\t      }).reverse();\n\t      showOnPage(list);\n\t    }\n\t  };\n\t})();\n\t\n\tvar isSneakPreview = function isSneakPreview(infos) {\n\t  return infos.title.startsWith('Sneak');\n\t};\n\t\n\tgetYorckInfos().map(function (yorckInfos) {\n\t  return _(yorckInfos).reject(isSneakPreview).map(getMovie).map(function (movieFutureEither) {\n\t    return movieFutureEither.map(function (movie) {\n\t      movies.add(movie);return movie;\n\t    }).getOrLeftMap(showPageLoadError);\n\t  });\n\t}).getOrLeftMap(showPageLoadError);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//     Underscore.js 1.8.3\n\t//     http://underscorejs.org\n\t//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t//     Underscore may be freely distributed under the MIT license.\n\t\n\t(function() {\n\t\n\t  // Baseline setup\n\t  // --------------\n\t\n\t  // Establish the root object, `window` in the browser, or `exports` on the server.\n\t  var root = this;\n\t\n\t  // Save the previous value of the `_` variable.\n\t  var previousUnderscore = root._;\n\t\n\t  // Save bytes in the minified (but not gzipped) version:\n\t  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\t\n\t  // Create quick reference variables for speed access to core prototypes.\n\t  var\n\t    push             = ArrayProto.push,\n\t    slice            = ArrayProto.slice,\n\t    toString         = ObjProto.toString,\n\t    hasOwnProperty   = ObjProto.hasOwnProperty;\n\t\n\t  // All **ECMAScript 5** native function implementations that we hope to use\n\t  // are declared here.\n\t  var\n\t    nativeIsArray      = Array.isArray,\n\t    nativeKeys         = Object.keys,\n\t    nativeBind         = FuncProto.bind,\n\t    nativeCreate       = Object.create;\n\t\n\t  // Naked function reference for surrogate-prototype-swapping.\n\t  var Ctor = function(){};\n\t\n\t  // Create a safe reference to the Underscore object for use below.\n\t  var _ = function(obj) {\n\t    if (obj instanceof _) return obj;\n\t    if (!(this instanceof _)) return new _(obj);\n\t    this._wrapped = obj;\n\t  };\n\t\n\t  // Export the Underscore object for **Node.js**, with\n\t  // backwards-compatibility for the old `require()` API. If we're in\n\t  // the browser, add `_` as a global object.\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = _;\n\t    }\n\t    exports._ = _;\n\t  } else {\n\t    root._ = _;\n\t  }\n\t\n\t  // Current version.\n\t  _.VERSION = '1.8.3';\n\t\n\t  // Internal function that returns an efficient (for current engines) version\n\t  // of the passed-in callback, to be repeatedly applied in other Underscore\n\t  // functions.\n\t  var optimizeCb = function(func, context, argCount) {\n\t    if (context === void 0) return func;\n\t    switch (argCount == null ? 3 : argCount) {\n\t      case 1: return function(value) {\n\t        return func.call(context, value);\n\t      };\n\t      case 2: return function(value, other) {\n\t        return func.call(context, value, other);\n\t      };\n\t      case 3: return function(value, index, collection) {\n\t        return func.call(context, value, index, collection);\n\t      };\n\t      case 4: return function(accumulator, value, index, collection) {\n\t        return func.call(context, accumulator, value, index, collection);\n\t      };\n\t    }\n\t    return function() {\n\t      return func.apply(context, arguments);\n\t    };\n\t  };\n\t\n\t  // A mostly-internal function to generate callbacks that can be applied\n\t  // to each element in a collection, returning the desired result — either\n\t  // identity, an arbitrary callback, a property matcher, or a property accessor.\n\t  var cb = function(value, context, argCount) {\n\t    if (value == null) return _.identity;\n\t    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n\t    if (_.isObject(value)) return _.matcher(value);\n\t    return _.property(value);\n\t  };\n\t  _.iteratee = function(value, context) {\n\t    return cb(value, context, Infinity);\n\t  };\n\t\n\t  // An internal function for creating assigner functions.\n\t  var createAssigner = function(keysFunc, undefinedOnly) {\n\t    return function(obj) {\n\t      var length = arguments.length;\n\t      if (length < 2 || obj == null) return obj;\n\t      for (var index = 1; index < length; index++) {\n\t        var source = arguments[index],\n\t            keys = keysFunc(source),\n\t            l = keys.length;\n\t        for (var i = 0; i < l; i++) {\n\t          var key = keys[i];\n\t          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n\t        }\n\t      }\n\t      return obj;\n\t    };\n\t  };\n\t\n\t  // An internal function for creating a new object that inherits from another.\n\t  var baseCreate = function(prototype) {\n\t    if (!_.isObject(prototype)) return {};\n\t    if (nativeCreate) return nativeCreate(prototype);\n\t    Ctor.prototype = prototype;\n\t    var result = new Ctor;\n\t    Ctor.prototype = null;\n\t    return result;\n\t  };\n\t\n\t  var property = function(key) {\n\t    return function(obj) {\n\t      return obj == null ? void 0 : obj[key];\n\t    };\n\t  };\n\t\n\t  // Helper for collection methods to determine whether a collection\n\t  // should be iterated as an array or as an object\n\t  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\t  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\t  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\t  var getLength = property('length');\n\t  var isArrayLike = function(collection) {\n\t    var length = getLength(collection);\n\t    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n\t  };\n\t\n\t  // Collection Functions\n\t  // --------------------\n\t\n\t  // The cornerstone, an `each` implementation, aka `forEach`.\n\t  // Handles raw objects in addition to array-likes. Treats all\n\t  // sparse array-likes as if they were dense.\n\t  _.each = _.forEach = function(obj, iteratee, context) {\n\t    iteratee = optimizeCb(iteratee, context);\n\t    var i, length;\n\t    if (isArrayLike(obj)) {\n\t      for (i = 0, length = obj.length; i < length; i++) {\n\t        iteratee(obj[i], i, obj);\n\t      }\n\t    } else {\n\t      var keys = _.keys(obj);\n\t      for (i = 0, length = keys.length; i < length; i++) {\n\t        iteratee(obj[keys[i]], keys[i], obj);\n\t      }\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Return the results of applying the iteratee to each element.\n\t  _.map = _.collect = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length,\n\t        results = Array(length);\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      results[index] = iteratee(obj[currentKey], currentKey, obj);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  // Create a reducing function iterating left or right.\n\t  function createReduce(dir) {\n\t    // Optimized iterator function as using arguments.length\n\t    // in the main function will deoptimize the, see #1991.\n\t    function iterator(obj, iteratee, memo, keys, index, length) {\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        var currentKey = keys ? keys[index] : index;\n\t        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n\t      }\n\t      return memo;\n\t    }\n\t\n\t    return function(obj, iteratee, memo, context) {\n\t      iteratee = optimizeCb(iteratee, context, 4);\n\t      var keys = !isArrayLike(obj) && _.keys(obj),\n\t          length = (keys || obj).length,\n\t          index = dir > 0 ? 0 : length - 1;\n\t      // Determine the initial value if none is provided.\n\t      if (arguments.length < 3) {\n\t        memo = obj[keys ? keys[index] : index];\n\t        index += dir;\n\t      }\n\t      return iterator(obj, iteratee, memo, keys, index, length);\n\t    };\n\t  }\n\t\n\t  // **Reduce** builds up a single result from a list of values, aka `inject`,\n\t  // or `foldl`.\n\t  _.reduce = _.foldl = _.inject = createReduce(1);\n\t\n\t  // The right-associative version of reduce, also known as `foldr`.\n\t  _.reduceRight = _.foldr = createReduce(-1);\n\t\n\t  // Return the first value which passes a truth test. Aliased as `detect`.\n\t  _.find = _.detect = function(obj, predicate, context) {\n\t    var key;\n\t    if (isArrayLike(obj)) {\n\t      key = _.findIndex(obj, predicate, context);\n\t    } else {\n\t      key = _.findKey(obj, predicate, context);\n\t    }\n\t    if (key !== void 0 && key !== -1) return obj[key];\n\t  };\n\t\n\t  // Return all the elements that pass a truth test.\n\t  // Aliased as `select`.\n\t  _.filter = _.select = function(obj, predicate, context) {\n\t    var results = [];\n\t    predicate = cb(predicate, context);\n\t    _.each(obj, function(value, index, list) {\n\t      if (predicate(value, index, list)) results.push(value);\n\t    });\n\t    return results;\n\t  };\n\t\n\t  // Return all the elements for which a truth test fails.\n\t  _.reject = function(obj, predicate, context) {\n\t    return _.filter(obj, _.negate(cb(predicate)), context);\n\t  };\n\t\n\t  // Determine whether all of the elements match a truth test.\n\t  // Aliased as `all`.\n\t  _.every = _.all = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  // Determine if at least one element in the object matches a truth test.\n\t  // Aliased as `any`.\n\t  _.some = _.any = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = !isArrayLike(obj) && _.keys(obj),\n\t        length = (keys || obj).length;\n\t    for (var index = 0; index < length; index++) {\n\t      var currentKey = keys ? keys[index] : index;\n\t      if (predicate(obj[currentKey], currentKey, obj)) return true;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  // Determine if the array or object contains a given item (using `===`).\n\t  // Aliased as `includes` and `include`.\n\t  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n\t    if (!isArrayLike(obj)) obj = _.values(obj);\n\t    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n\t    return _.indexOf(obj, item, fromIndex) >= 0;\n\t  };\n\t\n\t  // Invoke a method (with arguments) on every item in a collection.\n\t  _.invoke = function(obj, method) {\n\t    var args = slice.call(arguments, 2);\n\t    var isFunc = _.isFunction(method);\n\t    return _.map(obj, function(value) {\n\t      var func = isFunc ? method : value[method];\n\t      return func == null ? func : func.apply(value, args);\n\t    });\n\t  };\n\t\n\t  // Convenience version of a common use case of `map`: fetching a property.\n\t  _.pluck = function(obj, key) {\n\t    return _.map(obj, _.property(key));\n\t  };\n\t\n\t  // Convenience version of a common use case of `filter`: selecting only objects\n\t  // containing specific `key:value` pairs.\n\t  _.where = function(obj, attrs) {\n\t    return _.filter(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Convenience version of a common use case of `find`: getting the first object\n\t  // containing specific `key:value` pairs.\n\t  _.findWhere = function(obj, attrs) {\n\t    return _.find(obj, _.matcher(attrs));\n\t  };\n\t\n\t  // Return the maximum element (or element-based computation).\n\t  _.max = function(obj, iteratee, context) {\n\t    var result = -Infinity, lastComputed = -Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value > result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return the minimum element (or element-based computation).\n\t  _.min = function(obj, iteratee, context) {\n\t    var result = Infinity, lastComputed = Infinity,\n\t        value, computed;\n\t    if (iteratee == null && obj != null) {\n\t      obj = isArrayLike(obj) ? obj : _.values(obj);\n\t      for (var i = 0, length = obj.length; i < length; i++) {\n\t        value = obj[i];\n\t        if (value < result) {\n\t          result = value;\n\t        }\n\t      }\n\t    } else {\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index, list) {\n\t        computed = iteratee(value, index, list);\n\t        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n\t          result = value;\n\t          lastComputed = computed;\n\t        }\n\t      });\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Shuffle a collection, using the modern version of the\n\t  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n\t  _.shuffle = function(obj) {\n\t    var set = isArrayLike(obj) ? obj : _.values(obj);\n\t    var length = set.length;\n\t    var shuffled = Array(length);\n\t    for (var index = 0, rand; index < length; index++) {\n\t      rand = _.random(0, index);\n\t      if (rand !== index) shuffled[index] = shuffled[rand];\n\t      shuffled[rand] = set[index];\n\t    }\n\t    return shuffled;\n\t  };\n\t\n\t  // Sample **n** random values from a collection.\n\t  // If **n** is not specified, returns a single random element.\n\t  // The internal `guard` argument allows it to work with `map`.\n\t  _.sample = function(obj, n, guard) {\n\t    if (n == null || guard) {\n\t      if (!isArrayLike(obj)) obj = _.values(obj);\n\t      return obj[_.random(obj.length - 1)];\n\t    }\n\t    return _.shuffle(obj).slice(0, Math.max(0, n));\n\t  };\n\t\n\t  // Sort the object's values by a criterion produced by an iteratee.\n\t  _.sortBy = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    return _.pluck(_.map(obj, function(value, index, list) {\n\t      return {\n\t        value: value,\n\t        index: index,\n\t        criteria: iteratee(value, index, list)\n\t      };\n\t    }).sort(function(left, right) {\n\t      var a = left.criteria;\n\t      var b = right.criteria;\n\t      if (a !== b) {\n\t        if (a > b || a === void 0) return 1;\n\t        if (a < b || b === void 0) return -1;\n\t      }\n\t      return left.index - right.index;\n\t    }), 'value');\n\t  };\n\t\n\t  // An internal function used for aggregate \"group by\" operations.\n\t  var group = function(behavior) {\n\t    return function(obj, iteratee, context) {\n\t      var result = {};\n\t      iteratee = cb(iteratee, context);\n\t      _.each(obj, function(value, index) {\n\t        var key = iteratee(value, index, obj);\n\t        behavior(result, value, key);\n\t      });\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Groups the object's values by a criterion. Pass either a string attribute\n\t  // to group by, or a function that returns the criterion.\n\t  _.groupBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n\t  });\n\t\n\t  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n\t  // when you know that your index values will be unique.\n\t  _.indexBy = group(function(result, value, key) {\n\t    result[key] = value;\n\t  });\n\t\n\t  // Counts instances of an object that group by a certain criterion. Pass\n\t  // either a string attribute to count by, or a function that returns the\n\t  // criterion.\n\t  _.countBy = group(function(result, value, key) {\n\t    if (_.has(result, key)) result[key]++; else result[key] = 1;\n\t  });\n\t\n\t  // Safely create a real, live array from anything iterable.\n\t  _.toArray = function(obj) {\n\t    if (!obj) return [];\n\t    if (_.isArray(obj)) return slice.call(obj);\n\t    if (isArrayLike(obj)) return _.map(obj, _.identity);\n\t    return _.values(obj);\n\t  };\n\t\n\t  // Return the number of elements in an object.\n\t  _.size = function(obj) {\n\t    if (obj == null) return 0;\n\t    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n\t  };\n\t\n\t  // Split a collection into two arrays: one whose elements all satisfy the given\n\t  // predicate, and one whose elements all do not satisfy the predicate.\n\t  _.partition = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var pass = [], fail = [];\n\t    _.each(obj, function(value, key, obj) {\n\t      (predicate(value, key, obj) ? pass : fail).push(value);\n\t    });\n\t    return [pass, fail];\n\t  };\n\t\n\t  // Array Functions\n\t  // ---------------\n\t\n\t  // Get the first element of an array. Passing **n** will return the first N\n\t  // values in the array. Aliased as `head` and `take`. The **guard** check\n\t  // allows it to work with `_.map`.\n\t  _.first = _.head = _.take = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[0];\n\t    return _.initial(array, array.length - n);\n\t  };\n\t\n\t  // Returns everything but the last entry of the array. Especially useful on\n\t  // the arguments object. Passing **n** will return all the values in\n\t  // the array, excluding the last N.\n\t  _.initial = function(array, n, guard) {\n\t    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n\t  };\n\t\n\t  // Get the last element of an array. Passing **n** will return the last N\n\t  // values in the array.\n\t  _.last = function(array, n, guard) {\n\t    if (array == null) return void 0;\n\t    if (n == null || guard) return array[array.length - 1];\n\t    return _.rest(array, Math.max(0, array.length - n));\n\t  };\n\t\n\t  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n\t  // Especially useful on the arguments object. Passing an **n** will return\n\t  // the rest N values in the array.\n\t  _.rest = _.tail = _.drop = function(array, n, guard) {\n\t    return slice.call(array, n == null || guard ? 1 : n);\n\t  };\n\t\n\t  // Trim out all falsy values from an array.\n\t  _.compact = function(array) {\n\t    return _.filter(array, _.identity);\n\t  };\n\t\n\t  // Internal implementation of a recursive `flatten` function.\n\t  var flatten = function(input, shallow, strict, startIndex) {\n\t    var output = [], idx = 0;\n\t    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n\t      var value = input[i];\n\t      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n\t        //flatten current level of array or arguments object\n\t        if (!shallow) value = flatten(value, shallow, strict);\n\t        var j = 0, len = value.length;\n\t        output.length += len;\n\t        while (j < len) {\n\t          output[idx++] = value[j++];\n\t        }\n\t      } else if (!strict) {\n\t        output[idx++] = value;\n\t      }\n\t    }\n\t    return output;\n\t  };\n\t\n\t  // Flatten out an array, either recursively (by default), or just one level.\n\t  _.flatten = function(array, shallow) {\n\t    return flatten(array, shallow, false);\n\t  };\n\t\n\t  // Return a version of the array that does not contain the specified value(s).\n\t  _.without = function(array) {\n\t    return _.difference(array, slice.call(arguments, 1));\n\t  };\n\t\n\t  // Produce a duplicate-free version of the array. If the array has already\n\t  // been sorted, you have the option of using a faster algorithm.\n\t  // Aliased as `unique`.\n\t  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n\t    if (!_.isBoolean(isSorted)) {\n\t      context = iteratee;\n\t      iteratee = isSorted;\n\t      isSorted = false;\n\t    }\n\t    if (iteratee != null) iteratee = cb(iteratee, context);\n\t    var result = [];\n\t    var seen = [];\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var value = array[i],\n\t          computed = iteratee ? iteratee(value, i, array) : value;\n\t      if (isSorted) {\n\t        if (!i || seen !== computed) result.push(value);\n\t        seen = computed;\n\t      } else if (iteratee) {\n\t        if (!_.contains(seen, computed)) {\n\t          seen.push(computed);\n\t          result.push(value);\n\t        }\n\t      } else if (!_.contains(result, value)) {\n\t        result.push(value);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Produce an array that contains the union: each distinct element from all of\n\t  // the passed-in arrays.\n\t  _.union = function() {\n\t    return _.uniq(flatten(arguments, true, true));\n\t  };\n\t\n\t  // Produce an array that contains every item shared between all the\n\t  // passed-in arrays.\n\t  _.intersection = function(array) {\n\t    var result = [];\n\t    var argsLength = arguments.length;\n\t    for (var i = 0, length = getLength(array); i < length; i++) {\n\t      var item = array[i];\n\t      if (_.contains(result, item)) continue;\n\t      for (var j = 1; j < argsLength; j++) {\n\t        if (!_.contains(arguments[j], item)) break;\n\t      }\n\t      if (j === argsLength) result.push(item);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Take the difference between one array and a number of other arrays.\n\t  // Only the elements present in just the first array will remain.\n\t  _.difference = function(array) {\n\t    var rest = flatten(arguments, true, true, 1);\n\t    return _.filter(array, function(value){\n\t      return !_.contains(rest, value);\n\t    });\n\t  };\n\t\n\t  // Zip together multiple lists into a single array -- elements that share\n\t  // an index go together.\n\t  _.zip = function() {\n\t    return _.unzip(arguments);\n\t  };\n\t\n\t  // Complement of _.zip. Unzip accepts an array of arrays and groups\n\t  // each array's elements on shared indices\n\t  _.unzip = function(array) {\n\t    var length = array && _.max(array, getLength).length || 0;\n\t    var result = Array(length);\n\t\n\t    for (var index = 0; index < length; index++) {\n\t      result[index] = _.pluck(array, index);\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Converts lists into objects. Pass either a single array of `[key, value]`\n\t  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n\t  // the corresponding values.\n\t  _.object = function(list, values) {\n\t    var result = {};\n\t    for (var i = 0, length = getLength(list); i < length; i++) {\n\t      if (values) {\n\t        result[list[i]] = values[i];\n\t      } else {\n\t        result[list[i][0]] = list[i][1];\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Generator function to create the findIndex and findLastIndex functions\n\t  function createPredicateIndexFinder(dir) {\n\t    return function(array, predicate, context) {\n\t      predicate = cb(predicate, context);\n\t      var length = getLength(array);\n\t      var index = dir > 0 ? 0 : length - 1;\n\t      for (; index >= 0 && index < length; index += dir) {\n\t        if (predicate(array[index], index, array)) return index;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Returns the first index on an array-like that passes a predicate test\n\t  _.findIndex = createPredicateIndexFinder(1);\n\t  _.findLastIndex = createPredicateIndexFinder(-1);\n\t\n\t  // Use a comparator function to figure out the smallest index at which\n\t  // an object should be inserted so as to maintain order. Uses binary search.\n\t  _.sortedIndex = function(array, obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context, 1);\n\t    var value = iteratee(obj);\n\t    var low = 0, high = getLength(array);\n\t    while (low < high) {\n\t      var mid = Math.floor((low + high) / 2);\n\t      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n\t    }\n\t    return low;\n\t  };\n\t\n\t  // Generator function to create the indexOf and lastIndexOf functions\n\t  function createIndexFinder(dir, predicateFind, sortedIndex) {\n\t    return function(array, item, idx) {\n\t      var i = 0, length = getLength(array);\n\t      if (typeof idx == 'number') {\n\t        if (dir > 0) {\n\t            i = idx >= 0 ? idx : Math.max(idx + length, i);\n\t        } else {\n\t            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n\t        }\n\t      } else if (sortedIndex && idx && length) {\n\t        idx = sortedIndex(array, item);\n\t        return array[idx] === item ? idx : -1;\n\t      }\n\t      if (item !== item) {\n\t        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n\t        return idx >= 0 ? idx + i : -1;\n\t      }\n\t      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n\t        if (array[idx] === item) return idx;\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  // Return the position of the first occurrence of an item in an array,\n\t  // or -1 if the item is not included in the array.\n\t  // If the array is large and already in sort order, pass `true`\n\t  // for **isSorted** to use binary search.\n\t  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n\t  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\t\n\t  // Generate an integer Array containing an arithmetic progression. A port of\n\t  // the native Python `range()` function. See\n\t  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\t  _.range = function(start, stop, step) {\n\t    if (stop == null) {\n\t      stop = start || 0;\n\t      start = 0;\n\t    }\n\t    step = step || 1;\n\t\n\t    var length = Math.max(Math.ceil((stop - start) / step), 0);\n\t    var range = Array(length);\n\t\n\t    for (var idx = 0; idx < length; idx++, start += step) {\n\t      range[idx] = start;\n\t    }\n\t\n\t    return range;\n\t  };\n\t\n\t  // Function (ahem) Functions\n\t  // ------------------\n\t\n\t  // Determines whether to execute a function as a constructor\n\t  // or a normal function with the provided arguments\n\t  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n\t    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n\t    var self = baseCreate(sourceFunc.prototype);\n\t    var result = sourceFunc.apply(self, args);\n\t    if (_.isObject(result)) return result;\n\t    return self;\n\t  };\n\t\n\t  // Create a function bound to a given object (assigning `this`, and arguments,\n\t  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n\t  // available.\n\t  _.bind = function(func, context) {\n\t    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n\t    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n\t    var args = slice.call(arguments, 2);\n\t    var bound = function() {\n\t      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Partially apply a function by creating a version that has had some of its\n\t  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n\t  // as a placeholder, allowing any combination of arguments to be pre-filled.\n\t  _.partial = function(func) {\n\t    var boundArgs = slice.call(arguments, 1);\n\t    var bound = function() {\n\t      var position = 0, length = boundArgs.length;\n\t      var args = Array(length);\n\t      for (var i = 0; i < length; i++) {\n\t        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n\t      }\n\t      while (position < arguments.length) args.push(arguments[position++]);\n\t      return executeBound(func, bound, this, this, args);\n\t    };\n\t    return bound;\n\t  };\n\t\n\t  // Bind a number of an object's methods to that object. Remaining arguments\n\t  // are the method names to be bound. Useful for ensuring that all callbacks\n\t  // defined on an object belong to it.\n\t  _.bindAll = function(obj) {\n\t    var i, length = arguments.length, key;\n\t    if (length <= 1) throw new Error('bindAll must be passed function names');\n\t    for (i = 1; i < length; i++) {\n\t      key = arguments[i];\n\t      obj[key] = _.bind(obj[key], obj);\n\t    }\n\t    return obj;\n\t  };\n\t\n\t  // Memoize an expensive function by storing its results.\n\t  _.memoize = function(func, hasher) {\n\t    var memoize = function(key) {\n\t      var cache = memoize.cache;\n\t      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n\t      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n\t      return cache[address];\n\t    };\n\t    memoize.cache = {};\n\t    return memoize;\n\t  };\n\t\n\t  // Delays a function for the given number of milliseconds, and then calls\n\t  // it with the arguments supplied.\n\t  _.delay = function(func, wait) {\n\t    var args = slice.call(arguments, 2);\n\t    return setTimeout(function(){\n\t      return func.apply(null, args);\n\t    }, wait);\n\t  };\n\t\n\t  // Defers a function, scheduling it to run after the current call stack has\n\t  // cleared.\n\t  _.defer = _.partial(_.delay, _, 1);\n\t\n\t  // Returns a function, that, when invoked, will only be triggered at most once\n\t  // during a given window of time. Normally, the throttled function will run\n\t  // as much as it can, without ever going more than once per `wait` duration;\n\t  // but if you'd like to disable the execution on the leading edge, pass\n\t  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\t  _.throttle = function(func, wait, options) {\n\t    var context, args, result;\n\t    var timeout = null;\n\t    var previous = 0;\n\t    if (!options) options = {};\n\t    var later = function() {\n\t      previous = options.leading === false ? 0 : _.now();\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    };\n\t    return function() {\n\t      var now = _.now();\n\t      if (!previous && options.leading === false) previous = now;\n\t      var remaining = wait - (now - previous);\n\t      context = this;\n\t      args = arguments;\n\t      if (remaining <= 0 || remaining > wait) {\n\t        if (timeout) {\n\t          clearTimeout(timeout);\n\t          timeout = null;\n\t        }\n\t        previous = now;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      } else if (!timeout && options.trailing !== false) {\n\t        timeout = setTimeout(later, remaining);\n\t      }\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function, that, as long as it continues to be invoked, will not\n\t  // be triggered. The function will be called after it stops being called for\n\t  // N milliseconds. If `immediate` is passed, trigger the function on the\n\t  // leading edge, instead of the trailing.\n\t  _.debounce = function(func, wait, immediate) {\n\t    var timeout, args, context, timestamp, result;\n\t\n\t    var later = function() {\n\t      var last = _.now() - timestamp;\n\t\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        if (!immediate) {\n\t          result = func.apply(context, args);\n\t          if (!timeout) context = args = null;\n\t        }\n\t      }\n\t    };\n\t\n\t    return function() {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = _.now();\n\t      var callNow = immediate && !timeout;\n\t      if (!timeout) timeout = setTimeout(later, wait);\n\t      if (callNow) {\n\t        result = func.apply(context, args);\n\t        context = args = null;\n\t      }\n\t\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns the first function passed as an argument to the second,\n\t  // allowing you to adjust arguments, run code before and after, and\n\t  // conditionally execute the original function.\n\t  _.wrap = function(func, wrapper) {\n\t    return _.partial(wrapper, func);\n\t  };\n\t\n\t  // Returns a negated version of the passed-in predicate.\n\t  _.negate = function(predicate) {\n\t    return function() {\n\t      return !predicate.apply(this, arguments);\n\t    };\n\t  };\n\t\n\t  // Returns a function that is the composition of a list of functions, each\n\t  // consuming the return value of the function that follows.\n\t  _.compose = function() {\n\t    var args = arguments;\n\t    var start = args.length - 1;\n\t    return function() {\n\t      var i = start;\n\t      var result = args[start].apply(this, arguments);\n\t      while (i--) result = args[i].call(this, result);\n\t      return result;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed on and after the Nth call.\n\t  _.after = function(times, func) {\n\t    return function() {\n\t      if (--times < 1) {\n\t        return func.apply(this, arguments);\n\t      }\n\t    };\n\t  };\n\t\n\t  // Returns a function that will only be executed up to (but not including) the Nth call.\n\t  _.before = function(times, func) {\n\t    var memo;\n\t    return function() {\n\t      if (--times > 0) {\n\t        memo = func.apply(this, arguments);\n\t      }\n\t      if (times <= 1) func = null;\n\t      return memo;\n\t    };\n\t  };\n\t\n\t  // Returns a function that will be executed at most one time, no matter how\n\t  // often you call it. Useful for lazy initialization.\n\t  _.once = _.partial(_.before, 2);\n\t\n\t  // Object Functions\n\t  // ----------------\n\t\n\t  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\t  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n\t  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n\t                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\t\n\t  function collectNonEnumProps(obj, keys) {\n\t    var nonEnumIdx = nonEnumerableProps.length;\n\t    var constructor = obj.constructor;\n\t    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\t\n\t    // Constructor is a special case.\n\t    var prop = 'constructor';\n\t    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\t\n\t    while (nonEnumIdx--) {\n\t      prop = nonEnumerableProps[nonEnumIdx];\n\t      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n\t        keys.push(prop);\n\t      }\n\t    }\n\t  }\n\t\n\t  // Retrieve the names of an object's own properties.\n\t  // Delegates to **ECMAScript 5**'s native `Object.keys`\n\t  _.keys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    if (nativeKeys) return nativeKeys(obj);\n\t    var keys = [];\n\t    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve all the property names of an object.\n\t  _.allKeys = function(obj) {\n\t    if (!_.isObject(obj)) return [];\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    // Ahem, IE < 9.\n\t    if (hasEnumBug) collectNonEnumProps(obj, keys);\n\t    return keys;\n\t  };\n\t\n\t  // Retrieve the values of an object's properties.\n\t  _.values = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var values = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      values[i] = obj[keys[i]];\n\t    }\n\t    return values;\n\t  };\n\t\n\t  // Returns the results of applying the iteratee to each element of the object\n\t  // In contrast to _.map it returns an object\n\t  _.mapObject = function(obj, iteratee, context) {\n\t    iteratee = cb(iteratee, context);\n\t    var keys =  _.keys(obj),\n\t          length = keys.length,\n\t          results = {},\n\t          currentKey;\n\t      for (var index = 0; index < length; index++) {\n\t        currentKey = keys[index];\n\t        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n\t      }\n\t      return results;\n\t  };\n\t\n\t  // Convert an object into a list of `[key, value]` pairs.\n\t  _.pairs = function(obj) {\n\t    var keys = _.keys(obj);\n\t    var length = keys.length;\n\t    var pairs = Array(length);\n\t    for (var i = 0; i < length; i++) {\n\t      pairs[i] = [keys[i], obj[keys[i]]];\n\t    }\n\t    return pairs;\n\t  };\n\t\n\t  // Invert the keys and values of an object. The values must be serializable.\n\t  _.invert = function(obj) {\n\t    var result = {};\n\t    var keys = _.keys(obj);\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      result[obj[keys[i]]] = keys[i];\n\t    }\n\t    return result;\n\t  };\n\t\n\t  // Return a sorted list of the function names available on the object.\n\t  // Aliased as `methods`\n\t  _.functions = _.methods = function(obj) {\n\t    var names = [];\n\t    for (var key in obj) {\n\t      if (_.isFunction(obj[key])) names.push(key);\n\t    }\n\t    return names.sort();\n\t  };\n\t\n\t  // Extend a given object with all the properties in passed-in object(s).\n\t  _.extend = createAssigner(_.allKeys);\n\t\n\t  // Assigns a given object with all the own properties in the passed-in object(s)\n\t  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\t  _.extendOwn = _.assign = createAssigner(_.keys);\n\t\n\t  // Returns the first key on an object that passes a predicate test\n\t  _.findKey = function(obj, predicate, context) {\n\t    predicate = cb(predicate, context);\n\t    var keys = _.keys(obj), key;\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      key = keys[i];\n\t      if (predicate(obj[key], key, obj)) return key;\n\t    }\n\t  };\n\t\n\t  // Return a copy of the object only containing the whitelisted properties.\n\t  _.pick = function(object, oiteratee, context) {\n\t    var result = {}, obj = object, iteratee, keys;\n\t    if (obj == null) return result;\n\t    if (_.isFunction(oiteratee)) {\n\t      keys = _.allKeys(obj);\n\t      iteratee = optimizeCb(oiteratee, context);\n\t    } else {\n\t      keys = flatten(arguments, false, false, 1);\n\t      iteratee = function(value, key, obj) { return key in obj; };\n\t      obj = Object(obj);\n\t    }\n\t    for (var i = 0, length = keys.length; i < length; i++) {\n\t      var key = keys[i];\n\t      var value = obj[key];\n\t      if (iteratee(value, key, obj)) result[key] = value;\n\t    }\n\t    return result;\n\t  };\n\t\n\t   // Return a copy of the object without the blacklisted properties.\n\t  _.omit = function(obj, iteratee, context) {\n\t    if (_.isFunction(iteratee)) {\n\t      iteratee = _.negate(iteratee);\n\t    } else {\n\t      var keys = _.map(flatten(arguments, false, false, 1), String);\n\t      iteratee = function(value, key) {\n\t        return !_.contains(keys, key);\n\t      };\n\t    }\n\t    return _.pick(obj, iteratee, context);\n\t  };\n\t\n\t  // Fill in a given object with default properties.\n\t  _.defaults = createAssigner(_.allKeys, true);\n\t\n\t  // Creates an object that inherits from the given prototype object.\n\t  // If additional properties are provided then they will be added to the\n\t  // created object.\n\t  _.create = function(prototype, props) {\n\t    var result = baseCreate(prototype);\n\t    if (props) _.extendOwn(result, props);\n\t    return result;\n\t  };\n\t\n\t  // Create a (shallow-cloned) duplicate of an object.\n\t  _.clone = function(obj) {\n\t    if (!_.isObject(obj)) return obj;\n\t    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n\t  };\n\t\n\t  // Invokes interceptor with the obj, and then returns obj.\n\t  // The primary purpose of this method is to \"tap into\" a method chain, in\n\t  // order to perform operations on intermediate results within the chain.\n\t  _.tap = function(obj, interceptor) {\n\t    interceptor(obj);\n\t    return obj;\n\t  };\n\t\n\t  // Returns whether an object has a given set of `key:value` pairs.\n\t  _.isMatch = function(object, attrs) {\n\t    var keys = _.keys(attrs), length = keys.length;\n\t    if (object == null) return !length;\n\t    var obj = Object(object);\n\t    for (var i = 0; i < length; i++) {\n\t      var key = keys[i];\n\t      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t\n\t  // Internal recursive comparison function for `isEqual`.\n\t  var eq = function(a, b, aStack, bStack) {\n\t    // Identical objects are equal. `0 === -0`, but they aren't identical.\n\t    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n\t    if (a === b) return a !== 0 || 1 / a === 1 / b;\n\t    // A strict comparison is necessary because `null == undefined`.\n\t    if (a == null || b == null) return a === b;\n\t    // Unwrap any wrapped objects.\n\t    if (a instanceof _) a = a._wrapped;\n\t    if (b instanceof _) b = b._wrapped;\n\t    // Compare `[[Class]]` names.\n\t    var className = toString.call(a);\n\t    if (className !== toString.call(b)) return false;\n\t    switch (className) {\n\t      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n\t      case '[object RegExp]':\n\t      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\t      case '[object String]':\n\t        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n\t        // equivalent to `new String(\"5\")`.\n\t        return '' + a === '' + b;\n\t      case '[object Number]':\n\t        // `NaN`s are equivalent, but non-reflexive.\n\t        // Object(NaN) is equivalent to NaN\n\t        if (+a !== +a) return +b !== +b;\n\t        // An `egal` comparison is performed for other numeric values.\n\t        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\t      case '[object Date]':\n\t      case '[object Boolean]':\n\t        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n\t        // millisecond representations. Note that invalid dates with millisecond representations\n\t        // of `NaN` are not equivalent.\n\t        return +a === +b;\n\t    }\n\t\n\t    var areArrays = className === '[object Array]';\n\t    if (!areArrays) {\n\t      if (typeof a != 'object' || typeof b != 'object') return false;\n\t\n\t      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n\t      // from different frames are.\n\t      var aCtor = a.constructor, bCtor = b.constructor;\n\t      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n\t                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n\t                          && ('constructor' in a && 'constructor' in b)) {\n\t        return false;\n\t      }\n\t    }\n\t    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n\t    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\t\n\t    // Initializing stack of traversed objects.\n\t    // It's done here since we only need them for objects and arrays comparison.\n\t    aStack = aStack || [];\n\t    bStack = bStack || [];\n\t    var length = aStack.length;\n\t    while (length--) {\n\t      // Linear search. Performance is inversely proportional to the number of\n\t      // unique nested structures.\n\t      if (aStack[length] === a) return bStack[length] === b;\n\t    }\n\t\n\t    // Add the first object to the stack of traversed objects.\n\t    aStack.push(a);\n\t    bStack.push(b);\n\t\n\t    // Recursively compare objects and arrays.\n\t    if (areArrays) {\n\t      // Compare array lengths to determine if a deep comparison is necessary.\n\t      length = a.length;\n\t      if (length !== b.length) return false;\n\t      // Deep compare the contents, ignoring non-numeric properties.\n\t      while (length--) {\n\t        if (!eq(a[length], b[length], aStack, bStack)) return false;\n\t      }\n\t    } else {\n\t      // Deep compare objects.\n\t      var keys = _.keys(a), key;\n\t      length = keys.length;\n\t      // Ensure that both objects contain the same number of properties before comparing deep equality.\n\t      if (_.keys(b).length !== length) return false;\n\t      while (length--) {\n\t        // Deep compare each member\n\t        key = keys[length];\n\t        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n\t      }\n\t    }\n\t    // Remove the first object from the stack of traversed objects.\n\t    aStack.pop();\n\t    bStack.pop();\n\t    return true;\n\t  };\n\t\n\t  // Perform a deep comparison to check if two objects are equal.\n\t  _.isEqual = function(a, b) {\n\t    return eq(a, b);\n\t  };\n\t\n\t  // Is a given array, string, or object empty?\n\t  // An \"empty\" object has no enumerable own-properties.\n\t  _.isEmpty = function(obj) {\n\t    if (obj == null) return true;\n\t    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n\t    return _.keys(obj).length === 0;\n\t  };\n\t\n\t  // Is a given value a DOM element?\n\t  _.isElement = function(obj) {\n\t    return !!(obj && obj.nodeType === 1);\n\t  };\n\t\n\t  // Is a given value an array?\n\t  // Delegates to ECMA5's native Array.isArray\n\t  _.isArray = nativeIsArray || function(obj) {\n\t    return toString.call(obj) === '[object Array]';\n\t  };\n\t\n\t  // Is a given variable an object?\n\t  _.isObject = function(obj) {\n\t    var type = typeof obj;\n\t    return type === 'function' || type === 'object' && !!obj;\n\t  };\n\t\n\t  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n\t  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n\t    _['is' + name] = function(obj) {\n\t      return toString.call(obj) === '[object ' + name + ']';\n\t    };\n\t  });\n\t\n\t  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n\t  // there isn't any inspectable \"Arguments\" type.\n\t  if (!_.isArguments(arguments)) {\n\t    _.isArguments = function(obj) {\n\t      return _.has(obj, 'callee');\n\t    };\n\t  }\n\t\n\t  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n\t  // IE 11 (#1621), and in Safari 8 (#1929).\n\t  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n\t    _.isFunction = function(obj) {\n\t      return typeof obj == 'function' || false;\n\t    };\n\t  }\n\t\n\t  // Is a given object a finite number?\n\t  _.isFinite = function(obj) {\n\t    return isFinite(obj) && !isNaN(parseFloat(obj));\n\t  };\n\t\n\t  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n\t  _.isNaN = function(obj) {\n\t    return _.isNumber(obj) && obj !== +obj;\n\t  };\n\t\n\t  // Is a given value a boolean?\n\t  _.isBoolean = function(obj) {\n\t    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n\t  };\n\t\n\t  // Is a given value equal to null?\n\t  _.isNull = function(obj) {\n\t    return obj === null;\n\t  };\n\t\n\t  // Is a given variable undefined?\n\t  _.isUndefined = function(obj) {\n\t    return obj === void 0;\n\t  };\n\t\n\t  // Shortcut function for checking if an object has a given property directly\n\t  // on itself (in other words, not on a prototype).\n\t  _.has = function(obj, key) {\n\t    return obj != null && hasOwnProperty.call(obj, key);\n\t  };\n\t\n\t  // Utility Functions\n\t  // -----------------\n\t\n\t  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n\t  // previous owner. Returns a reference to the Underscore object.\n\t  _.noConflict = function() {\n\t    root._ = previousUnderscore;\n\t    return this;\n\t  };\n\t\n\t  // Keep the identity function around for default iteratees.\n\t  _.identity = function(value) {\n\t    return value;\n\t  };\n\t\n\t  // Predicate-generating functions. Often useful outside of Underscore.\n\t  _.constant = function(value) {\n\t    return function() {\n\t      return value;\n\t    };\n\t  };\n\t\n\t  _.noop = function(){};\n\t\n\t  _.property = property;\n\t\n\t  // Generates a function for a given object that returns a given property.\n\t  _.propertyOf = function(obj) {\n\t    return obj == null ? function(){} : function(key) {\n\t      return obj[key];\n\t    };\n\t  };\n\t\n\t  // Returns a predicate for checking whether an object has a given set of\n\t  // `key:value` pairs.\n\t  _.matcher = _.matches = function(attrs) {\n\t    attrs = _.extendOwn({}, attrs);\n\t    return function(obj) {\n\t      return _.isMatch(obj, attrs);\n\t    };\n\t  };\n\t\n\t  // Run a function **n** times.\n\t  _.times = function(n, iteratee, context) {\n\t    var accum = Array(Math.max(0, n));\n\t    iteratee = optimizeCb(iteratee, context, 1);\n\t    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n\t    return accum;\n\t  };\n\t\n\t  // Return a random integer between min and max (inclusive).\n\t  _.random = function(min, max) {\n\t    if (max == null) {\n\t      max = min;\n\t      min = 0;\n\t    }\n\t    return min + Math.floor(Math.random() * (max - min + 1));\n\t  };\n\t\n\t  // A (possibly faster) way to get the current timestamp as an integer.\n\t  _.now = Date.now || function() {\n\t    return new Date().getTime();\n\t  };\n\t\n\t   // List of HTML entities for escaping.\n\t  var escapeMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#x27;',\n\t    '`': '&#x60;'\n\t  };\n\t  var unescapeMap = _.invert(escapeMap);\n\t\n\t  // Functions for escaping and unescaping strings to/from HTML interpolation.\n\t  var createEscaper = function(map) {\n\t    var escaper = function(match) {\n\t      return map[match];\n\t    };\n\t    // Regexes for identifying a key that needs to be escaped\n\t    var source = '(?:' + _.keys(map).join('|') + ')';\n\t    var testRegexp = RegExp(source);\n\t    var replaceRegexp = RegExp(source, 'g');\n\t    return function(string) {\n\t      string = string == null ? '' : '' + string;\n\t      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n\t    };\n\t  };\n\t  _.escape = createEscaper(escapeMap);\n\t  _.unescape = createEscaper(unescapeMap);\n\t\n\t  // If the value of the named `property` is a function then invoke it with the\n\t  // `object` as context; otherwise, return it.\n\t  _.result = function(object, property, fallback) {\n\t    var value = object == null ? void 0 : object[property];\n\t    if (value === void 0) {\n\t      value = fallback;\n\t    }\n\t    return _.isFunction(value) ? value.call(object) : value;\n\t  };\n\t\n\t  // Generate a unique integer id (unique within the entire client session).\n\t  // Useful for temporary DOM ids.\n\t  var idCounter = 0;\n\t  _.uniqueId = function(prefix) {\n\t    var id = ++idCounter + '';\n\t    return prefix ? prefix + id : id;\n\t  };\n\t\n\t  // By default, Underscore uses ERB-style template delimiters, change the\n\t  // following template settings to use alternative delimiters.\n\t  _.templateSettings = {\n\t    evaluate    : /<%([\\s\\S]+?)%>/g,\n\t    interpolate : /<%=([\\s\\S]+?)%>/g,\n\t    escape      : /<%-([\\s\\S]+?)%>/g\n\t  };\n\t\n\t  // When customizing `templateSettings`, if you don't want to define an\n\t  // interpolation, evaluation or escaping regex, we need one that is\n\t  // guaranteed not to match.\n\t  var noMatch = /(.)^/;\n\t\n\t  // Certain characters need to be escaped so that they can be put into a\n\t  // string literal.\n\t  var escapes = {\n\t    \"'\":      \"'\",\n\t    '\\\\':     '\\\\',\n\t    '\\r':     'r',\n\t    '\\n':     'n',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\t\n\t  var escapeChar = function(match) {\n\t    return '\\\\' + escapes[match];\n\t  };\n\t\n\t  // JavaScript micro-templating, similar to John Resig's implementation.\n\t  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n\t  // and correctly escapes quotes within interpolated code.\n\t  // NB: `oldSettings` only exists for backwards compatibility.\n\t  _.template = function(text, settings, oldSettings) {\n\t    if (!settings && oldSettings) settings = oldSettings;\n\t    settings = _.defaults({}, settings, _.templateSettings);\n\t\n\t    // Combine delimiters into one regular expression via alternation.\n\t    var matcher = RegExp([\n\t      (settings.escape || noMatch).source,\n\t      (settings.interpolate || noMatch).source,\n\t      (settings.evaluate || noMatch).source\n\t    ].join('|') + '|$', 'g');\n\t\n\t    // Compile the template source, escaping string literals appropriately.\n\t    var index = 0;\n\t    var source = \"__p+='\";\n\t    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n\t      source += text.slice(index, offset).replace(escaper, escapeChar);\n\t      index = offset + match.length;\n\t\n\t      if (escape) {\n\t        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n\t      } else if (interpolate) {\n\t        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n\t      } else if (evaluate) {\n\t        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n\t      }\n\t\n\t      // Adobe VMs need the match returned to produce the correct offest.\n\t      return match;\n\t    });\n\t    source += \"';\\n\";\n\t\n\t    // If a variable is not specified, place data values in local scope.\n\t    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\t\n\t    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n\t      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n\t      source + 'return __p;\\n';\n\t\n\t    try {\n\t      var render = new Function(settings.variable || 'obj', '_', source);\n\t    } catch (e) {\n\t      e.source = source;\n\t      throw e;\n\t    }\n\t\n\t    var template = function(data) {\n\t      return render.call(this, data, _);\n\t    };\n\t\n\t    // Provide the compiled source as a convenience for precompilation.\n\t    var argument = settings.variable || 'obj';\n\t    template.source = 'function(' + argument + '){\\n' + source + '}';\n\t\n\t    return template;\n\t  };\n\t\n\t  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\t  _.chain = function(obj) {\n\t    var instance = _(obj);\n\t    instance._chain = true;\n\t    return instance;\n\t  };\n\t\n\t  // OOP\n\t  // ---------------\n\t  // If Underscore is called as a function, it returns a wrapped object that\n\t  // can be used OO-style. This wrapper holds altered versions of all the\n\t  // underscore functions. Wrapped objects may be chained.\n\t\n\t  // Helper function to continue chaining intermediate results.\n\t  var result = function(instance, obj) {\n\t    return instance._chain ? _(obj).chain() : obj;\n\t  };\n\t\n\t  // Add your own custom functions to the Underscore object.\n\t  _.mixin = function(obj) {\n\t    _.each(_.functions(obj), function(name) {\n\t      var func = _[name] = obj[name];\n\t      _.prototype[name] = function() {\n\t        var args = [this._wrapped];\n\t        push.apply(args, arguments);\n\t        return result(this, func.apply(_, args));\n\t      };\n\t    });\n\t  };\n\t\n\t  // Add all of the Underscore functions to the wrapper object.\n\t  _.mixin(_);\n\t\n\t  // Add all mutator Array functions to the wrapper.\n\t  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      var obj = this._wrapped;\n\t      method.apply(obj, arguments);\n\t      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n\t      return result(this, obj);\n\t    };\n\t  });\n\t\n\t  // Add all accessor Array functions to the wrapper.\n\t  _.each(['concat', 'join', 'slice'], function(name) {\n\t    var method = ArrayProto[name];\n\t    _.prototype[name] = function() {\n\t      return result(this, method.apply(this._wrapped, arguments));\n\t    };\n\t  });\n\t\n\t  // Extracts the result from a wrapped and chained object.\n\t  _.prototype.value = function() {\n\t    return this._wrapped;\n\t  };\n\t\n\t  // Provide unwrapping proxy for some methods used in engine operations\n\t  // such as arithmetic and JSON stringification.\n\t  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\t\n\t  _.prototype.toString = function() {\n\t    return '' + this._wrapped;\n\t  };\n\t\n\t  // AMD registration happens at the end for compatibility with AMD loaders\n\t  // that may not enforce next-turn semantics on modules. Even though general\n\t  // practice for AMD registration is to be anonymous, underscore registers\n\t  // as a named module because, like jQuery, it is a base library that is\n\t  // popular enough to be bundled in a third party lib, but not be part of\n\t  // an AMD load request. Those cases could generate an error when an\n\t  // anonymous define() is called outside of a loader request.\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}.call(this));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person\n\t// obtaining a copy of this software and associated documentation files\n\t// (the \"Software\"), to deal in the Software without restriction,\n\t// including without limitation the rights to use, copy, modify, merge,\n\t// publish, distribute, sublicense, and/or sell copies of the Software,\n\t// and to permit persons to whom the Software is furnished to do so,\n\t// subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be\n\t// included in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\t// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\t// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = __webpack_require__(3)\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person\n\t// obtaining a copy of this software and associated documentation files\n\t// (the \"Software\"), to deal in the Software without restriction,\n\t// including without limitation the rights to use, copy, modify, merge,\n\t// publish, distribute, sublicense, and/or sell copies of the Software,\n\t// and to permit persons to whom the Software is furnished to do so,\n\t// subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be\n\t// included in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\t// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\t// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t/**\n\t * @module lib/maybe\n\t */\n\tmodule.exports = Maybe\n\t\n\t// -- Aliases ----------------------------------------------------------\n\tvar clone         = Object.create\n\tvar unimplemented = function(){ throw new Error('Not implemented.') }\n\tvar noop          = function(){ return this                         }\n\t\n\t// -- Implementation ---------------------------------------------------\n\t\n\t/**\n\t * A structure for values that may not be present, or computations that may\n\t * fail. `Maybe(a)` explicitly models the effects that are implicit in\n\t * `Nullable` types, thus has none of the problems associated with\n\t * `null` or `undefined` — like `NullPointerExceptions`.\n\t *\n\t * The class models two different cases:\n\t *\n\t *  + `Just a` — represents a `Maybe(a)` that contains a value. `a` may\n\t *     be any value, including `null` or `undefined`.\n\t *\n\t *  + `Nothing` — represents a `Maybe(a)` that has no values. Or a\n\t *     failure that needs no additional information.\n\t *\n\t * Common uses of this structure includes modelling values that may or may\n\t * not be present in a collection, thus instead of needing a\n\t * `collection.has(a)`, the `collection.get(a)` operation gives you all\n\t * the information you need — `collection.get(a).is-nothing` being\n\t * equivalent to `collection.has(a)`; Similarly the same reasoning may\n\t * be applied to computations that may fail to provide a value, e.g.:\n\t * `collection.find(predicate)` can safely return a `Maybe(a)` instance,\n\t * even if the collection contains nullable values.\n\t *\n\t * Furthermore, the values of `Maybe(a)` can be combined and manipulated\n\t * by using the expressive monadic operations. This allows safely\n\t * sequencing operations that may fail, and safely composing values that\n\t * you don't know whether they're present or not, failing early\n\t * (returning a `Nothing`) if any of the operations fail.\n\t *\n\t * If one wants to store additional information about failures, the\n\t * [Either][] and [Validation][] structures provide such a capability, and\n\t * should be used instead of the `Maybe(a)` structure.\n\t *\n\t * [Either]: https://github.com/folktale/data.either\n\t * [Validation]: https://github.com/folktale/data.validation\n\t *\n\t *\n\t * @class\n\t */\n\tfunction Maybe() {}\n\t\n\t// The case for successful values\n\tJust.prototype = clone(Maybe.prototype)\n\tfunction Just(a){\n\t  this.value = a\n\t}\n\t\n\t// The case for failure values\n\tNothing.prototype = clone(Maybe.prototype)\n\tfunction Nothing(){}\n\t\n\t\n\t// -- Constructors -----------------------------------------------------\n\t\n\t/**\n\t * Constructs a new `Maybe[α]` structure with an absent value. Commonly used\n\t * to represent a failure.\n\t *\n\t * @summary Void → Maybe[α]\n\t */\n\tMaybe.Nothing = function() {\n\t  return new Nothing\n\t}\n\tMaybe.prototype.Nothing = Maybe.Nothing\n\t\n\t/**\n\t * Constructs a new `Maybe[α]` structure that holds the single value\n\t * `α`. Commonly used to represent a success.\n\t *\n\t * `α` can be any value, including `null`, `undefined` or another\n\t * `Maybe[α]` structure.\n\t *\n\t * @summary α → Maybe[α]\n\t */\n\tMaybe.Just = function(a) {\n\t  return new Just(a)\n\t}\n\tMaybe.prototype.Just = Maybe.Just\n\t\n\t\n\t// -- Conversions ------------------------------------------------------\n\t\n\t/**\n\t * Constructs a new `Maybe[α]` structure from a nullable type.\n\t *\n\t * If the value is either `null` or `undefined`, this function returns a\n\t * `Nothing`, otherwise the value is wrapped in a `Just(α)`.\n\t *\n\t * @summary α → Maybe[α]\n\t */\n\tMaybe.fromNullable = function(a) {\n\t  return a != null?       new Just(a)\n\t  :      /* otherwise */  new Nothing\n\t}\n\tMaybe.prototype.fromNullable = Maybe.fromNullable\n\t\n\t/**\n\t * Constructs a new `Maybe[β]` structure from an `Either[α, β]` type.\n\t *\n\t * The left side of the `Either` becomes `Nothing`, and the right side\n\t * is wrapped in a `Just(β)`.\n\t *\n\t * @summary Either[α, β] → Maybe[β]\n\t */\n\tMaybe.fromEither = function(a) {\n\t  return a.fold(Maybe.Nothing, Maybe.Just)\n\t}\n\tMaybe.prototype.fromEither = Maybe.fromEither\n\t\n\t/**\n\t * Constructs a new `Maybe[β]` structure from a `Validation[α, β]` type.\n\t *\n\t * The failure side of the `Validation` becomes `Nothing`, and the right\n\t * side is wrapped in a `Just(β)`.\n\t *\n\t * @method\n\t * @summary Validation[α, β] → Maybe[β]\n\t */\n\tMaybe.fromValidation           = Maybe.fromEither\n\tMaybe.prototype.fromValidation = Maybe.fromEither\n\t\n\t\n\t// -- Predicates -------------------------------------------------------\n\t\n\t/**\n\t * True if the `Maybe[α]` structure contains a failure (i.e.: `Nothing`).\n\t *\n\t * @summary Boolean\n\t */\n\tMaybe.prototype.isNothing   = false\n\tNothing.prototype.isNothing = true\n\t\n\t\n\t/**\n\t * True if the `Maybe[α]` structure contains a single value (i.e.: `Just(α)`).\n\t *\n\t * @summary Boolean\n\t */\n\tMaybe.prototype.isJust = false\n\tJust.prototype.isJust  = true\n\t\n\t\n\t// -- Applicative ------------------------------------------------------\n\t\n\t/**\n\t * Creates a new `Maybe[α]` structure holding the single value `α`.\n\t *\n\t * `α` can be any value, including `null`, `undefined`, or another\n\t * `Maybe[α]` structure.\n\t *\n\t * @summary α → Maybe[α]\n\t */\n\tMaybe.of = function(a) {\n\t  return Maybe.prototype.Just(a)\n\t}\n\tMaybe.prototype.of = Maybe.of\n\t\n\t\n\t/**\n\t * Applies the function inside the `Maybe[α]` structure to another\n\t * applicative type.\n\t *\n\t * The `Maybe[α]` structure should contain a function value, otherwise a\n\t * `TypeError` is thrown.\n\t *\n\t * @method\n\t * @summary (@Maybe[α → β], f:Applicative[_]) => f[α] → f[β]\n\t */\n\tMaybe.prototype.ap = unimplemented\n\t\n\tNothing.prototype.ap = noop\n\t\n\tJust.prototype.ap = function(b) {\n\t  return b.map(this.value)\n\t}\n\t\n\t\n\t\n\t\n\t// -- Functor ----------------------------------------------------------\n\t\n\t/**\n\t * Transforms the value of the `Maybe[α]` structure using a regular unary\n\t * function.\n\t *\n\t * @method\n\t * @summary @Maybe[α] => (α → β) → Maybe[β]\n\t */\n\tMaybe.prototype.map   = unimplemented\n\tNothing.prototype.map = noop\n\t\n\tJust.prototype.map = function(f) {\n\t  return this.of(f(this.value))\n\t}\n\t\n\t\n\t// -- Chain ------------------------------------------------------------\n\t\n\t/**\n\t * Transforms the value of the `Maybe[α]` structure using an unary function\n\t * to monads.\n\t *\n\t * @method\n\t * @summary (@Maybe[α], m:Monad[_]) => (α → m[β]) → m[β]\n\t */\n\tMaybe.prototype.chain   = unimplemented\n\tNothing.prototype.chain = noop\n\t\n\tJust.prototype.chain = function(f) {\n\t  return f(this.value)\n\t}\n\t\n\t\n\t// -- Show -------------------------------------------------------------\n\t\n\t/**\n\t * Returns a textual representation of the `Maybe[α]` structure.\n\t *\n\t * @method\n\t * @summary @Maybe[α] => Void → String\n\t */\n\tMaybe.prototype.toString = unimplemented\n\t\n\tNothing.prototype.toString = function() {\n\t  return 'Maybe.Nothing'\n\t}\n\t\n\tJust.prototype.toString = function() {\n\t  return 'Maybe.Just(' + this.value + ')'\n\t}\n\t\n\t\n\t// -- Eq ---------------------------------------------------------------\n\t\n\t/**\n\t * Tests if a `Maybe[α]` structure is equal to another `Maybe[α]` structure.\n\t *\n\t * @method\n\t * @summary @Maybe[α] => Maybe[α] → Boolean\n\t */\n\tMaybe.prototype.isEqual = unimplemented\n\t\n\tNothing.prototype.isEqual = function(b) {\n\t  return b.isNothing\n\t}\n\t\n\tJust.prototype.isEqual = function(b) {\n\t  return b.isJust\n\t  &&     b.value === this.value\n\t}\n\t\n\t\n\t// -- Extracting and recovering ----------------------------------------\n\t\n\t/**\n\t * Extracts the value out of the `Maybe[α]` structure, if it\n\t * exists. Otherwise throws a `TypeError`.\n\t *\n\t * @method\n\t * @summary @Maybe[α] => Void → a,      :: partial, throws\n\t * @see {@link module:lib/maybe~Maybe#getOrElse} — A getter that can handle failures\n\t * @throws {TypeError} if the structure has no value (`Nothing`).\n\t */\n\tMaybe.prototype.get = unimplemented\n\t\n\tNothing.prototype.get = function() {\n\t  throw new TypeError(\"Can't extract the value of a Nothing.\")\n\t}\n\t\n\tJust.prototype.get = function() {\n\t  return this.value\n\t}\n\t\n\t\n\t/**\n\t * Extracts the value out of the `Maybe[α]` structure. If there is no value,\n\t * returns the given default.\n\t *\n\t * @method\n\t * @summary @Maybe[α] => α → α\n\t */\n\tMaybe.prototype.getOrElse = unimplemented\n\t\n\tNothing.prototype.getOrElse = function(a) {\n\t  return a\n\t}\n\t\n\tJust.prototype.getOrElse = function(_) {\n\t  return this.value\n\t}\n\t\n\t\n\t/**\n\t * Transforms a failure into a new `Maybe[α]` structure. Does nothing if the\n\t * structure already contains a value.\n\t *\n\t * @method\n\t * @summary @Maybe[α] => (Void → Maybe[α]) → Maybe[α]\n\t */\n\tMaybe.prototype.orElse = unimplemented\n\t\n\tNothing.prototype.orElse = function(f) {\n\t  return f()\n\t}\n\t\n\tJust.prototype.orElse = function(_) {\n\t  return this\n\t}\n\t\n\t\n\t/**\n\t * Catamorphism.\n\t * \n\t * @method\n\t * @summary @Maybe[α] => { Nothing: Void → β, Just: α → β } → β\n\t */\n\tMaybe.prototype.cata = unimplemented\n\t\n\tNothing.prototype.cata = function(pattern) {\n\t  return pattern.Nothing()\n\t}\n\t\n\tJust.prototype.cata = function(pattern) {\n\t  return pattern.Just(this.value);\n\t}\n\t\n\t\n\t/**\n\t * JSON serialisation\n\t *\n\t * @method\n\t * @summary @Maybe[α] => Void → Object\n\t */\n\tMaybe.prototype.toJSON = unimplemented\n\t\n\tNothing.prototype.toJSON = function() {\n\t  return { '#type': 'folktale:Maybe.Nothing' }\n\t}\n\t\n\tJust.prototype.toJSON = function() {\n\t  return { '#type': 'folktale:Maybe.Just'\n\t         , value: this.value }\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person\n\t// obtaining a copy of this software and associated documentation files\n\t// (the \"Software\"), to deal in the Software without restriction,\n\t// including without limitation the rights to use, copy, modify, merge,\n\t// publish, distribute, sublicense, and/or sell copies of the Software,\n\t// and to permit persons to whom the Software is furnished to do so,\n\t// subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be\n\t// included in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\t// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\t// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = __webpack_require__(5)\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person\n\t// obtaining a copy of this software and associated documentation files\n\t// (the \"Software\"), to deal in the Software without restriction,\n\t// including without limitation the rights to use, copy, modify, merge,\n\t// publish, distribute, sublicense, and/or sell copies of the Software,\n\t// and to permit persons to whom the Software is furnished to do so,\n\t// subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be\n\t// included in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\t// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\t// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n\t// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n\t// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t/**\n\t * @module lib/either\n\t */\n\tmodule.exports = Either\n\t\n\t// -- Aliases ----------------------------------------------------------\n\tvar clone         = Object.create\n\tvar unimplemented = function(){ throw new Error('Not implemented.') }\n\tvar noop          = function(){ return this                         }\n\t\n\t\n\t// -- Implementation ---------------------------------------------------\n\t\n\t/**\n\t * The `Either(a, b)` structure represents the logical disjunction between `a`\n\t * and `b`. In other words, `Either` may contain either a value of type `a` or\n\t * a value of type `b`, at any given time. This particular implementation is\n\t * biased on the right value (`b`), thus projections will take the right value\n\t * over the left one.\n\t *\n\t * This class models two different cases: `Left a` and `Right b`, and can hold\n\t * one of the cases at any given time. The projections are, none the less,\n\t * biased for the `Right` case, thus a common use case for this structure is to\n\t * hold the results of computations that may fail, when you want to store\n\t * additional information on the failure (instead of throwing an exception).\n\t *\n\t * Furthermore, the values of `Either(a, b)` can be combined and manipulated by\n\t * using the expressive monadic operations. This allows safely sequencing\n\t * operations that may fail, and safely composing values that you don't know\n\t * whether they're present or not, failing early (returning a `Left a`) if any\n\t * of the operations fail.\n\t *\n\t * While this class can certainly model input validations, the [Validation][]\n\t * structure lends itself better to that use case, since it can naturally\n\t * aggregate failures — monads shortcut on the first failure.\n\t *\n\t * [Validation]: https://github.com/folktale/data.validation\n\t *\n\t *\n\t * @class\n\t * @summary\n\t * Either[α, β] <: Applicative[β]\n\t *               , Functor[β]\n\t *               , Chain[β]\n\t *               , Show\n\t *               , Eq\n\t */\n\tfunction Either() { }\n\t\n\tLeft.prototype = clone(Either.prototype)\n\tfunction Left(a) {\n\t  this.value = a\n\t}\n\t\n\tRight.prototype = clone(Either.prototype)\n\tfunction Right(a) {\n\t  this.value = a\n\t}\n\t\n\t// -- Constructors -----------------------------------------------------\n\t\n\t/**\n\t * Constructs a new `Either[α, β]` structure holding a `Left` value. This\n\t * usually represents a failure due to the right-bias of this structure.\n\t *\n\t * @summary a → Either[α, β]\n\t */\n\tEither.Left = function(a) {\n\t  return new Left(a)\n\t}\n\tEither.prototype.Left = Either.Left\n\t\n\t/**\n\t * Constructs a new `Etiher[α, β]` structure holding a `Right` value. This\n\t * usually represents a successful value due to the right bias of this\n\t * structure.\n\t *\n\t * @summary β → Either[α, β]\n\t */\n\tEither.Right = function(a) {\n\t  return new Right(a)\n\t}\n\tEither.prototype.Right = Either.Right\n\t\n\t\n\t// -- Conversions ------------------------------------------------------\n\t\n\t/**\n\t * Constructs a new `Either[α, β]` structure from a nullable type.\n\t *\n\t * Takes the `Left` case if the value is `null` or `undefined`. Takes the\n\t * `Right` case otherwise.\n\t *\n\t * @summary α → Either[α, α]\n\t */\n\tEither.fromNullable = function(a) {\n\t  return a != null?       this.Right(a)\n\t  :      /* otherwise */  this.Left(a)\n\t}\n\tEither.prototype.fromNullable = Either.fromNullable\n\t\n\t/**\n\t * Constructs a new `Either[α, β]` structure from a `Validation[α, β]` type.\n\t *\n\t * @summary Validation[α, β] → Either[α, β]\n\t */\n\tEither.fromValidation = function(a) {\n\t  return a.fold(this.Left.bind(this), this.Right.bind(this))\n\t}\n\t\n\t\n\t// -- Predicates -------------------------------------------------------\n\t\n\t/**\n\t * True if the `Either[α, β]` contains a `Left` value.\n\t *\n\t * @summary Boolean\n\t */\n\tEither.prototype.isLeft = false\n\tLeft.prototype.isLeft   = true\n\t\n\t/**\n\t * True if the `Either[α, β]` contains a `Right` value.\n\t *\n\t * @summary Boolean\n\t */\n\tEither.prototype.isRight = false\n\tRight.prototype.isRight  = true\n\t\n\t\n\t// -- Applicative ------------------------------------------------------\n\t\n\t/**\n\t * Creates a new `Either[α, β]` instance holding the `Right` value `b`.\n\t *\n\t * `b` can be any value, including `null`, `undefined` or another\n\t * `Either[α, β]` structure.\n\t *\n\t * @summary β → Either[α, β]\n\t */\n\tEither.of = function(a) {\n\t  return this.Right(a)\n\t}\n\tEither.prototype.of = Either.of\n\t\n\t\n\t/**\n\t * Applies the function inside the `Right` case of the `Either[α, β]` structure\n\t * to another applicative type.\n\t *\n\t * The `Either[α, β]` should contain a function value, otherwise a `TypeError`\n\t * is thrown.\n\t *\n\t * @method\n\t * @summary (@Either[α, β → γ], f:Applicative[_]) => f[β] → f[γ]\n\t */\n\tEither.prototype.ap = unimplemented\n\t\n\tLeft.prototype.ap = function(b) {\n\t  return this\n\t}\n\t\n\tRight.prototype.ap = function(b) {\n\t  return b.map(this.value)\n\t}\n\t\n\t\n\t// -- Functor ----------------------------------------------------------\n\t\n\t/**\n\t * Transforms the `Right` value of the `Either[α, β]` structure using a regular\n\t * unary function.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => (β → γ) → Either[α, γ]\n\t */\n\tEither.prototype.map = unimplemented\n\tLeft.prototype.map   = noop\n\t\n\tRight.prototype.map = function(f) {\n\t  return this.of(f(this.value))\n\t}\n\t\n\t\n\t// -- Chain ------------------------------------------------------------\n\t\n\t/**\n\t * Transforms the `Right` value of the `Either[α, β]` structure using an unary\n\t * function to monads.\n\t *\n\t * @method\n\t * @summary (@Either[α, β], m:Monad[_]) => (β → m[γ]) → m[γ]\n\t */\n\tEither.prototype.chain = unimplemented\n\tLeft.prototype.chain   = noop\n\t\n\tRight.prototype.chain = function(f) {\n\t  return f(this.value)\n\t}\n\t\n\t\n\t// -- Show -------------------------------------------------------------\n\t\n\t/**\n\t * Returns a textual representation of the `Either[α, β]` structure.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => Void → String\n\t */\n\tEither.prototype.toString = unimplemented\n\t\n\tLeft.prototype.toString = function() {\n\t  return 'Either.Left(' + this.value + ')'\n\t}\n\t\n\tRight.prototype.toString = function() {\n\t  return 'Either.Right(' + this.value + ')'\n\t}\n\t\n\t\n\t// -- Eq ---------------------------------------------------------------\n\t\n\t/**\n\t * Tests if an `Either[α, β]` structure is equal to another `Either[α, β]`\n\t * structure.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => Either[α, β] → Boolean\n\t */\n\tEither.prototype.isEqual = unimplemented\n\t\n\tLeft.prototype.isEqual = function(a) {\n\t  return a.isLeft && (a.value === this.value)\n\t}\n\t\n\tRight.prototype.isEqual = function(a) {\n\t  return a.isRight && (a.value === this.value)\n\t}\n\t\n\t\n\t// -- Extracting and recovering ----------------------------------------\n\t\n\t/**\n\t * Extracts the `Right` value out of the `Either[α, β]` structure, if it\n\t * exists. Otherwise throws a `TypeError`.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => Void → β         :: partial, throws\n\t * @see {@link module:lib/either~Either#getOrElse} — A getter that can handle failures.\n\t * @see {@link module:lib/either~Either#merge} — The convergence of both values.\n\t * @throws {TypeError} if the structure has no `Right` value.\n\t */\n\tEither.prototype.get = unimplemented\n\t\n\tLeft.prototype.get = function() {\n\t  throw new TypeError(\"Can't extract the value of a Left(a).\")\n\t}\n\t\n\tRight.prototype.get = function() {\n\t  return this.value\n\t}\n\t\n\t\n\t/**\n\t * Extracts the `Right` value out of the `Either[α, β]` structure. If the\n\t * structure doesn't have a `Right` value, returns the given default.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => β → β\n\t */\n\tEither.prototype.getOrElse = unimplemented\n\t\n\tLeft.prototype.getOrElse = function(a) {\n\t  return a\n\t}\n\t\n\tRight.prototype.getOrElse = function(_) {\n\t  return this.value\n\t}\n\t\n\t\n\t/**\n\t * Transforms a `Left` value into a new `Either[α, β]` structure. Does nothing\n\t * if the structure contain a `Right` value.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => (α → Either[γ, β]) → Either[γ, β]\n\t */\n\tEither.prototype.orElse = unimplemented\n\tRight.prototype.orElse  = noop\n\t\n\tLeft.prototype.orElse = function(f) {\n\t  return f(this.value)\n\t}\n\t\n\t\n\t/**\n\t * Returns the value of whichever side of the disjunction that is present.\n\t *\n\t * @summary (@Either[α, α]) => Void → α\n\t */\n\tEither.prototype.merge = function() {\n\t  return this.value\n\t}\n\t\n\t\n\t// -- Folds and Extended Transformations -------------------------------\n\t\n\t/**\n\t * Applies a function to each case in this data structure.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => (α → γ), (β → γ) → γ\n\t */\n\tEither.prototype.fold = unimplemented\n\t\n\tLeft.prototype.fold = function(f, _) {\n\t  return f(this.value)\n\t}\n\t\n\tRight.prototype.fold = function(_, g) {\n\t  return g(this.value)\n\t}\n\t\n\t/**\n\t * Catamorphism.\n\t * \n\t * @method\n\t * @summary (@Either[α, β]) => { Left: α → γ, Right: β → γ } → γ\n\t */\n\tEither.prototype.cata = unimplemented\n\t\n\tLeft.prototype.cata = function(pattern) {\n\t  return pattern.Left(this.value)\n\t}\n\t\n\tRight.prototype.cata = function(pattern) {\n\t  return pattern.Right(this.value)\n\t}\n\t\n\t\n\t/**\n\t * Swaps the disjunction values.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => Void → Either[β, α]\n\t */\n\tEither.prototype.swap = unimplemented\n\t\n\tLeft.prototype.swap = function() {\n\t  return this.Right(this.value)\n\t}\n\t\n\tRight.prototype.swap = function() {\n\t  return this.Left(this.value)\n\t}\n\t\n\t\n\t/**\n\t * Maps both sides of the disjunction.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => (α → γ), (β → δ) → Either[γ, δ]\n\t */\n\tEither.prototype.bimap = unimplemented\n\t\n\tLeft.prototype.bimap = function(f, _) {\n\t  return this.Left(f(this.value))\n\t}\n\t\n\tRight.prototype.bimap = function(_, g) {\n\t  return this.Right(g(this.value))\n\t}\n\t\n\t\n\t/**\n\t * Maps the left side of the disjunction.\n\t *\n\t * @method\n\t * @summary (@Either[α, β]) => (α → γ) → Either[γ, β]\n\t */\n\tEither.prototype.leftMap = unimplemented\n\tRight.prototype.leftMap  = noop\n\t\n\tLeft.prototype.leftMap = function(f) {\n\t  return this.Left(f(this.value))\n\t}\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** index.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4a58946bf5cb746b2997\n **/","const _ = require('underscore');\nconst Maybe = require('data.maybe');\nconst Either = require('data.either');\n\nconst proxify = url => '//crossorigin.me/' + url;\nconst unproxify = url => url.replace(/http(s)?:\\/\\/crossorigin.me\\//, '');\n\nconst Future = f => {\n  return {\n    get: () => f(x => x),\n    map: g => Future(k => f(result => k(g(result)))),\n    flatMap: h => Future(k => f(result => h(result).map(k).get()))\n  }\n};\n\nconst FutureEither = future => {\n  return {\n    future: future,\n    get: future.get,\n    getOrLeftMap: f => future.map(either => either.isLeft ? either.leftMap(f) : either.get()).get(),\n    map: f => FutureEither(future.map(either =>\n      either.isLeft ? either : Either.Right(f(either.get())))),\n    flatMap: f => {\n      const result = future.flatMap(either =>\n        either.isLeft ? Future(g => g(either)) : f(either.get()).future);\n      return FutureEither(result)\n    }\n  }\n};\n\nconst request = url =>\n  FutureEither(Future(f => {\n    const req = new XMLHttpRequest();\n    const handleError = () => Either.Left(`Error ${req.status} – ${req.statusText} while loading ${url}`);\n    req.onload = () =>\n      f(req.status == 200 ? Either.Right(req.responseXML) : handleError());\n    req.onerror = handleError;\n    req.open(\"GET\", proxify(url), true);\n    req.responseType = \"document\";\n    req.overrideMimeType(\"text/html\");\n    req.send();\n  }));\n\nconst YorckInfos = (title, url) => {\n  const rotateArticle = title => {\n    if (title.includes(', Der')) {\n      return 'Der ' + title.replace(', Der', '')\n    } else if (title.includes(', Die')) {\n      return 'Die ' + title.replace(', Die', '')\n    } else if (title.includes(', Das')) {\n      return 'Das ' + title.replace(', Das', '')\n    } else {\n      return title\n    }\n  };\n\n  const remove2And3D = title => {\n    if (title.includes('2D')) {\n      return title.replace('2D', '')\n    } else if (title.includes('3D')) {\n      return title.replace('3D', '')\n    } else {\n      return title\n    }\n  };\n\n  const correctTitle = _.compose(remove2And3D, rotateArticle);\n\n  return {\n    title: rotateArticle(title),\n    searchableTitle: correctTitle(title),\n    url: url\n  }\n};\n\nconst Movie = (yorckInfos, imdbInfos) => {\n  return {\n    yorck: yorckInfos,\n    imdb: imdbInfos\n  }\n};\n\nconst YorckPage = doc => {\n  return {\n    movieAnchors: _(doc.querySelectorAll('.films a'))\n  }\n};\n\nconst ImdbSearchPage = doc => {\n  return {\n    moviePathMaybe: Maybe.fromNullable(doc.querySelector('.findList .findResult a'))\n      .map(a => a.pathname)\n  };\n};\n\nconst ImdbDetailPage = doc => {\n  const $ = (selector) => doc.querySelector(selector) || {textContent: \"n/a\"};\n\n  return {\n    url: unproxify(doc.URL),\n    rating: (() => {\n      const rating = parseFloat($('span[itemprop=\"ratingValue\"]').textContent);\n      return isNaN(rating) ? 0 : rating\n    })(),\n    ratingsCount: $('span[itemprop=\"ratingCount\"]').textContent.trim(),\n    title: $('*[itemprop=\"name\"]').textContent\n  }\n};\n\nconst getYorckInfos = () => {\n  const yorckFilmsUrl = \"http://www.yorck.de/mobile/filme\";\n\n  const extractInfos = yp =>\n    yp.movieAnchors.map(({textContent, href}) => YorckInfos(textContent, href));\n\n  return request(yorckFilmsUrl)\n    .map(YorckPage)\n    .map(extractInfos)\n};\n\nconst getMovie = (yorckInfos) => {\n  const imdbUrl = \"http://www.imdb.com\";\n  const searchUrl = `${imdbUrl}/find?q=${encodeURIComponent(yorckInfos.searchableTitle)}`;\n\n  const searchPageEitherFuture = request(searchUrl);\n\n  return searchPageEitherFuture.flatMap(searchPage =>\n    ImdbSearchPage(searchPage).moviePathMaybe\n      .map(pathname => request(imdbUrl + pathname))\n      .getOrElse(FutureEither(Future(f =>\n        f(Either.Left(`Couldn't find movie \"${yorckInfos.title}\" on Imdb at ${searchUrl}`)))))\n      .map(detailPage => Movie(yorckInfos, ImdbDetailPage(detailPage))));\n};\n\nconst showOnPage = (movies) => {\n  const moviesTable = document.getElementById(\"movies\");\n  let moviesHtml = '';\n  movies.forEach(movie =>\n    moviesHtml += `\n      <tr>\n        <td>\n          ${movie.imdb.rating} (${movie.imdb.ratingsCount})\n        </td>\n        <td>\n          <a href=\"${movie.imdb.url}\">\n            ${movie.imdb.title}\n          </a>\n        </td>\n        <td>\n          <a href=\"${movie.yorck.url}\">\n            ${movie.yorck.title}\n          </a>\n        </td>\n      </tr>`);\n  moviesTable.innerHTML = moviesHtml;\n};\n\nconst showPageLoadError = errorMessage =>\n  document.getElementById(\"errors\").innerHTML += `<p>${errorMessage}</p>`;\n\nconst movies = function () {\n  let list = [];\n  return {\n    add: movie => {\n      list.push(movie);\n      list = _(list).sortBy(m => m.imdb.rating).reverse();\n      showOnPage(list)\n    }\n  }\n}();\n\nconst isSneakPreview = infos => infos.title.startsWith('Sneak');\n\ngetYorckInfos()\n  .map(yorckInfos =>\n    _(yorckInfos)\n      .reject(isSneakPreview)\n      .map(getMovie)\n      .map(movieFutureEither =>\n        movieFutureEither\n          .map(movie => { movies.add(movie); return movie })\n          .getOrLeftMap(showPageLoadError)))\n  .getOrLeftMap(showPageLoadError);\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 1\n ** module chunks = 0\n **/","// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation files\n// (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge,\n// publish, distribute, sublicense, and/or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = require('./maybe')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/data.maybe/lib/index.js\n ** module id = 2\n ** module chunks = 0\n **/","// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation files\n// (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge,\n// publish, distribute, sublicense, and/or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module lib/maybe\n */\nmodule.exports = Maybe\n\n// -- Aliases ----------------------------------------------------------\nvar clone         = Object.create\nvar unimplemented = function(){ throw new Error('Not implemented.') }\nvar noop          = function(){ return this                         }\n\n// -- Implementation ---------------------------------------------------\n\n/**\n * A structure for values that may not be present, or computations that may\n * fail. `Maybe(a)` explicitly models the effects that are implicit in\n * `Nullable` types, thus has none of the problems associated with\n * `null` or `undefined` — like `NullPointerExceptions`.\n *\n * The class models two different cases:\n *\n *  + `Just a` — represents a `Maybe(a)` that contains a value. `a` may\n *     be any value, including `null` or `undefined`.\n *\n *  + `Nothing` — represents a `Maybe(a)` that has no values. Or a\n *     failure that needs no additional information.\n *\n * Common uses of this structure includes modelling values that may or may\n * not be present in a collection, thus instead of needing a\n * `collection.has(a)`, the `collection.get(a)` operation gives you all\n * the information you need — `collection.get(a).is-nothing` being\n * equivalent to `collection.has(a)`; Similarly the same reasoning may\n * be applied to computations that may fail to provide a value, e.g.:\n * `collection.find(predicate)` can safely return a `Maybe(a)` instance,\n * even if the collection contains nullable values.\n *\n * Furthermore, the values of `Maybe(a)` can be combined and manipulated\n * by using the expressive monadic operations. This allows safely\n * sequencing operations that may fail, and safely composing values that\n * you don't know whether they're present or not, failing early\n * (returning a `Nothing`) if any of the operations fail.\n *\n * If one wants to store additional information about failures, the\n * [Either][] and [Validation][] structures provide such a capability, and\n * should be used instead of the `Maybe(a)` structure.\n *\n * [Either]: https://github.com/folktale/data.either\n * [Validation]: https://github.com/folktale/data.validation\n *\n *\n * @class\n */\nfunction Maybe() {}\n\n// The case for successful values\nJust.prototype = clone(Maybe.prototype)\nfunction Just(a){\n  this.value = a\n}\n\n// The case for failure values\nNothing.prototype = clone(Maybe.prototype)\nfunction Nothing(){}\n\n\n// -- Constructors -----------------------------------------------------\n\n/**\n * Constructs a new `Maybe[α]` structure with an absent value. Commonly used\n * to represent a failure.\n *\n * @summary Void → Maybe[α]\n */\nMaybe.Nothing = function() {\n  return new Nothing\n}\nMaybe.prototype.Nothing = Maybe.Nothing\n\n/**\n * Constructs a new `Maybe[α]` structure that holds the single value\n * `α`. Commonly used to represent a success.\n *\n * `α` can be any value, including `null`, `undefined` or another\n * `Maybe[α]` structure.\n *\n * @summary α → Maybe[α]\n */\nMaybe.Just = function(a) {\n  return new Just(a)\n}\nMaybe.prototype.Just = Maybe.Just\n\n\n// -- Conversions ------------------------------------------------------\n\n/**\n * Constructs a new `Maybe[α]` structure from a nullable type.\n *\n * If the value is either `null` or `undefined`, this function returns a\n * `Nothing`, otherwise the value is wrapped in a `Just(α)`.\n *\n * @summary α → Maybe[α]\n */\nMaybe.fromNullable = function(a) {\n  return a != null?       new Just(a)\n  :      /* otherwise */  new Nothing\n}\nMaybe.prototype.fromNullable = Maybe.fromNullable\n\n/**\n * Constructs a new `Maybe[β]` structure from an `Either[α, β]` type.\n *\n * The left side of the `Either` becomes `Nothing`, and the right side\n * is wrapped in a `Just(β)`.\n *\n * @summary Either[α, β] → Maybe[β]\n */\nMaybe.fromEither = function(a) {\n  return a.fold(Maybe.Nothing, Maybe.Just)\n}\nMaybe.prototype.fromEither = Maybe.fromEither\n\n/**\n * Constructs a new `Maybe[β]` structure from a `Validation[α, β]` type.\n *\n * The failure side of the `Validation` becomes `Nothing`, and the right\n * side is wrapped in a `Just(β)`.\n *\n * @method\n * @summary Validation[α, β] → Maybe[β]\n */\nMaybe.fromValidation           = Maybe.fromEither\nMaybe.prototype.fromValidation = Maybe.fromEither\n\n\n// -- Predicates -------------------------------------------------------\n\n/**\n * True if the `Maybe[α]` structure contains a failure (i.e.: `Nothing`).\n *\n * @summary Boolean\n */\nMaybe.prototype.isNothing   = false\nNothing.prototype.isNothing = true\n\n\n/**\n * True if the `Maybe[α]` structure contains a single value (i.e.: `Just(α)`).\n *\n * @summary Boolean\n */\nMaybe.prototype.isJust = false\nJust.prototype.isJust  = true\n\n\n// -- Applicative ------------------------------------------------------\n\n/**\n * Creates a new `Maybe[α]` structure holding the single value `α`.\n *\n * `α` can be any value, including `null`, `undefined`, or another\n * `Maybe[α]` structure.\n *\n * @summary α → Maybe[α]\n */\nMaybe.of = function(a) {\n  return Maybe.prototype.Just(a)\n}\nMaybe.prototype.of = Maybe.of\n\n\n/**\n * Applies the function inside the `Maybe[α]` structure to another\n * applicative type.\n *\n * The `Maybe[α]` structure should contain a function value, otherwise a\n * `TypeError` is thrown.\n *\n * @method\n * @summary (@Maybe[α → β], f:Applicative[_]) => f[α] → f[β]\n */\nMaybe.prototype.ap = unimplemented\n\nNothing.prototype.ap = noop\n\nJust.prototype.ap = function(b) {\n  return b.map(this.value)\n}\n\n\n\n\n// -- Functor ----------------------------------------------------------\n\n/**\n * Transforms the value of the `Maybe[α]` structure using a regular unary\n * function.\n *\n * @method\n * @summary @Maybe[α] => (α → β) → Maybe[β]\n */\nMaybe.prototype.map   = unimplemented\nNothing.prototype.map = noop\n\nJust.prototype.map = function(f) {\n  return this.of(f(this.value))\n}\n\n\n// -- Chain ------------------------------------------------------------\n\n/**\n * Transforms the value of the `Maybe[α]` structure using an unary function\n * to monads.\n *\n * @method\n * @summary (@Maybe[α], m:Monad[_]) => (α → m[β]) → m[β]\n */\nMaybe.prototype.chain   = unimplemented\nNothing.prototype.chain = noop\n\nJust.prototype.chain = function(f) {\n  return f(this.value)\n}\n\n\n// -- Show -------------------------------------------------------------\n\n/**\n * Returns a textual representation of the `Maybe[α]` structure.\n *\n * @method\n * @summary @Maybe[α] => Void → String\n */\nMaybe.prototype.toString = unimplemented\n\nNothing.prototype.toString = function() {\n  return 'Maybe.Nothing'\n}\n\nJust.prototype.toString = function() {\n  return 'Maybe.Just(' + this.value + ')'\n}\n\n\n// -- Eq ---------------------------------------------------------------\n\n/**\n * Tests if a `Maybe[α]` structure is equal to another `Maybe[α]` structure.\n *\n * @method\n * @summary @Maybe[α] => Maybe[α] → Boolean\n */\nMaybe.prototype.isEqual = unimplemented\n\nNothing.prototype.isEqual = function(b) {\n  return b.isNothing\n}\n\nJust.prototype.isEqual = function(b) {\n  return b.isJust\n  &&     b.value === this.value\n}\n\n\n// -- Extracting and recovering ----------------------------------------\n\n/**\n * Extracts the value out of the `Maybe[α]` structure, if it\n * exists. Otherwise throws a `TypeError`.\n *\n * @method\n * @summary @Maybe[α] => Void → a,      :: partial, throws\n * @see {@link module:lib/maybe~Maybe#getOrElse} — A getter that can handle failures\n * @throws {TypeError} if the structure has no value (`Nothing`).\n */\nMaybe.prototype.get = unimplemented\n\nNothing.prototype.get = function() {\n  throw new TypeError(\"Can't extract the value of a Nothing.\")\n}\n\nJust.prototype.get = function() {\n  return this.value\n}\n\n\n/**\n * Extracts the value out of the `Maybe[α]` structure. If there is no value,\n * returns the given default.\n *\n * @method\n * @summary @Maybe[α] => α → α\n */\nMaybe.prototype.getOrElse = unimplemented\n\nNothing.prototype.getOrElse = function(a) {\n  return a\n}\n\nJust.prototype.getOrElse = function(_) {\n  return this.value\n}\n\n\n/**\n * Transforms a failure into a new `Maybe[α]` structure. Does nothing if the\n * structure already contains a value.\n *\n * @method\n * @summary @Maybe[α] => (Void → Maybe[α]) → Maybe[α]\n */\nMaybe.prototype.orElse = unimplemented\n\nNothing.prototype.orElse = function(f) {\n  return f()\n}\n\nJust.prototype.orElse = function(_) {\n  return this\n}\n\n\n/**\n * Catamorphism.\n * \n * @method\n * @summary @Maybe[α] => { Nothing: Void → β, Just: α → β } → β\n */\nMaybe.prototype.cata = unimplemented\n\nNothing.prototype.cata = function(pattern) {\n  return pattern.Nothing()\n}\n\nJust.prototype.cata = function(pattern) {\n  return pattern.Just(this.value);\n}\n\n\n/**\n * JSON serialisation\n *\n * @method\n * @summary @Maybe[α] => Void → Object\n */\nMaybe.prototype.toJSON = unimplemented\n\nNothing.prototype.toJSON = function() {\n  return { '#type': 'folktale:Maybe.Nothing' }\n}\n\nJust.prototype.toJSON = function() {\n  return { '#type': 'folktale:Maybe.Just'\n         , value: this.value }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/data.maybe/lib/maybe.js\n ** module id = 3\n ** module chunks = 0\n **/","// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation files\n// (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge,\n// publish, distribute, sublicense, and/or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = require('./either')\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/data.either/lib/index.js\n ** module id = 4\n ** module chunks = 0\n **/","// Copyright (c) 2013-2014 Quildreen Motta <quildreen@gmail.com>\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation files\n// (the \"Software\"), to deal in the Software without restriction,\n// including without limitation the rights to use, copy, modify, merge,\n// publish, distribute, sublicense, and/or sell copies of the Software,\n// and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/**\n * @module lib/either\n */\nmodule.exports = Either\n\n// -- Aliases ----------------------------------------------------------\nvar clone         = Object.create\nvar unimplemented = function(){ throw new Error('Not implemented.') }\nvar noop          = function(){ return this                         }\n\n\n// -- Implementation ---------------------------------------------------\n\n/**\n * The `Either(a, b)` structure represents the logical disjunction between `a`\n * and `b`. In other words, `Either` may contain either a value of type `a` or\n * a value of type `b`, at any given time. This particular implementation is\n * biased on the right value (`b`), thus projections will take the right value\n * over the left one.\n *\n * This class models two different cases: `Left a` and `Right b`, and can hold\n * one of the cases at any given time. The projections are, none the less,\n * biased for the `Right` case, thus a common use case for this structure is to\n * hold the results of computations that may fail, when you want to store\n * additional information on the failure (instead of throwing an exception).\n *\n * Furthermore, the values of `Either(a, b)` can be combined and manipulated by\n * using the expressive monadic operations. This allows safely sequencing\n * operations that may fail, and safely composing values that you don't know\n * whether they're present or not, failing early (returning a `Left a`) if any\n * of the operations fail.\n *\n * While this class can certainly model input validations, the [Validation][]\n * structure lends itself better to that use case, since it can naturally\n * aggregate failures — monads shortcut on the first failure.\n *\n * [Validation]: https://github.com/folktale/data.validation\n *\n *\n * @class\n * @summary\n * Either[α, β] <: Applicative[β]\n *               , Functor[β]\n *               , Chain[β]\n *               , Show\n *               , Eq\n */\nfunction Either() { }\n\nLeft.prototype = clone(Either.prototype)\nfunction Left(a) {\n  this.value = a\n}\n\nRight.prototype = clone(Either.prototype)\nfunction Right(a) {\n  this.value = a\n}\n\n// -- Constructors -----------------------------------------------------\n\n/**\n * Constructs a new `Either[α, β]` structure holding a `Left` value. This\n * usually represents a failure due to the right-bias of this structure.\n *\n * @summary a → Either[α, β]\n */\nEither.Left = function(a) {\n  return new Left(a)\n}\nEither.prototype.Left = Either.Left\n\n/**\n * Constructs a new `Etiher[α, β]` structure holding a `Right` value. This\n * usually represents a successful value due to the right bias of this\n * structure.\n *\n * @summary β → Either[α, β]\n */\nEither.Right = function(a) {\n  return new Right(a)\n}\nEither.prototype.Right = Either.Right\n\n\n// -- Conversions ------------------------------------------------------\n\n/**\n * Constructs a new `Either[α, β]` structure from a nullable type.\n *\n * Takes the `Left` case if the value is `null` or `undefined`. Takes the\n * `Right` case otherwise.\n *\n * @summary α → Either[α, α]\n */\nEither.fromNullable = function(a) {\n  return a != null?       this.Right(a)\n  :      /* otherwise */  this.Left(a)\n}\nEither.prototype.fromNullable = Either.fromNullable\n\n/**\n * Constructs a new `Either[α, β]` structure from a `Validation[α, β]` type.\n *\n * @summary Validation[α, β] → Either[α, β]\n */\nEither.fromValidation = function(a) {\n  return a.fold(this.Left.bind(this), this.Right.bind(this))\n}\n\n\n// -- Predicates -------------------------------------------------------\n\n/**\n * True if the `Either[α, β]` contains a `Left` value.\n *\n * @summary Boolean\n */\nEither.prototype.isLeft = false\nLeft.prototype.isLeft   = true\n\n/**\n * True if the `Either[α, β]` contains a `Right` value.\n *\n * @summary Boolean\n */\nEither.prototype.isRight = false\nRight.prototype.isRight  = true\n\n\n// -- Applicative ------------------------------------------------------\n\n/**\n * Creates a new `Either[α, β]` instance holding the `Right` value `b`.\n *\n * `b` can be any value, including `null`, `undefined` or another\n * `Either[α, β]` structure.\n *\n * @summary β → Either[α, β]\n */\nEither.of = function(a) {\n  return this.Right(a)\n}\nEither.prototype.of = Either.of\n\n\n/**\n * Applies the function inside the `Right` case of the `Either[α, β]` structure\n * to another applicative type.\n *\n * The `Either[α, β]` should contain a function value, otherwise a `TypeError`\n * is thrown.\n *\n * @method\n * @summary (@Either[α, β → γ], f:Applicative[_]) => f[β] → f[γ]\n */\nEither.prototype.ap = unimplemented\n\nLeft.prototype.ap = function(b) {\n  return this\n}\n\nRight.prototype.ap = function(b) {\n  return b.map(this.value)\n}\n\n\n// -- Functor ----------------------------------------------------------\n\n/**\n * Transforms the `Right` value of the `Either[α, β]` structure using a regular\n * unary function.\n *\n * @method\n * @summary (@Either[α, β]) => (β → γ) → Either[α, γ]\n */\nEither.prototype.map = unimplemented\nLeft.prototype.map   = noop\n\nRight.prototype.map = function(f) {\n  return this.of(f(this.value))\n}\n\n\n// -- Chain ------------------------------------------------------------\n\n/**\n * Transforms the `Right` value of the `Either[α, β]` structure using an unary\n * function to monads.\n *\n * @method\n * @summary (@Either[α, β], m:Monad[_]) => (β → m[γ]) → m[γ]\n */\nEither.prototype.chain = unimplemented\nLeft.prototype.chain   = noop\n\nRight.prototype.chain = function(f) {\n  return f(this.value)\n}\n\n\n// -- Show -------------------------------------------------------------\n\n/**\n * Returns a textual representation of the `Either[α, β]` structure.\n *\n * @method\n * @summary (@Either[α, β]) => Void → String\n */\nEither.prototype.toString = unimplemented\n\nLeft.prototype.toString = function() {\n  return 'Either.Left(' + this.value + ')'\n}\n\nRight.prototype.toString = function() {\n  return 'Either.Right(' + this.value + ')'\n}\n\n\n// -- Eq ---------------------------------------------------------------\n\n/**\n * Tests if an `Either[α, β]` structure is equal to another `Either[α, β]`\n * structure.\n *\n * @method\n * @summary (@Either[α, β]) => Either[α, β] → Boolean\n */\nEither.prototype.isEqual = unimplemented\n\nLeft.prototype.isEqual = function(a) {\n  return a.isLeft && (a.value === this.value)\n}\n\nRight.prototype.isEqual = function(a) {\n  return a.isRight && (a.value === this.value)\n}\n\n\n// -- Extracting and recovering ----------------------------------------\n\n/**\n * Extracts the `Right` value out of the `Either[α, β]` structure, if it\n * exists. Otherwise throws a `TypeError`.\n *\n * @method\n * @summary (@Either[α, β]) => Void → β         :: partial, throws\n * @see {@link module:lib/either~Either#getOrElse} — A getter that can handle failures.\n * @see {@link module:lib/either~Either#merge} — The convergence of both values.\n * @throws {TypeError} if the structure has no `Right` value.\n */\nEither.prototype.get = unimplemented\n\nLeft.prototype.get = function() {\n  throw new TypeError(\"Can't extract the value of a Left(a).\")\n}\n\nRight.prototype.get = function() {\n  return this.value\n}\n\n\n/**\n * Extracts the `Right` value out of the `Either[α, β]` structure. If the\n * structure doesn't have a `Right` value, returns the given default.\n *\n * @method\n * @summary (@Either[α, β]) => β → β\n */\nEither.prototype.getOrElse = unimplemented\n\nLeft.prototype.getOrElse = function(a) {\n  return a\n}\n\nRight.prototype.getOrElse = function(_) {\n  return this.value\n}\n\n\n/**\n * Transforms a `Left` value into a new `Either[α, β]` structure. Does nothing\n * if the structure contain a `Right` value.\n *\n * @method\n * @summary (@Either[α, β]) => (α → Either[γ, β]) → Either[γ, β]\n */\nEither.prototype.orElse = unimplemented\nRight.prototype.orElse  = noop\n\nLeft.prototype.orElse = function(f) {\n  return f(this.value)\n}\n\n\n/**\n * Returns the value of whichever side of the disjunction that is present.\n *\n * @summary (@Either[α, α]) => Void → α\n */\nEither.prototype.merge = function() {\n  return this.value\n}\n\n\n// -- Folds and Extended Transformations -------------------------------\n\n/**\n * Applies a function to each case in this data structure.\n *\n * @method\n * @summary (@Either[α, β]) => (α → γ), (β → γ) → γ\n */\nEither.prototype.fold = unimplemented\n\nLeft.prototype.fold = function(f, _) {\n  return f(this.value)\n}\n\nRight.prototype.fold = function(_, g) {\n  return g(this.value)\n}\n\n/**\n * Catamorphism.\n * \n * @method\n * @summary (@Either[α, β]) => { Left: α → γ, Right: β → γ } → γ\n */\nEither.prototype.cata = unimplemented\n\nLeft.prototype.cata = function(pattern) {\n  return pattern.Left(this.value)\n}\n\nRight.prototype.cata = function(pattern) {\n  return pattern.Right(this.value)\n}\n\n\n/**\n * Swaps the disjunction values.\n *\n * @method\n * @summary (@Either[α, β]) => Void → Either[β, α]\n */\nEither.prototype.swap = unimplemented\n\nLeft.prototype.swap = function() {\n  return this.Right(this.value)\n}\n\nRight.prototype.swap = function() {\n  return this.Left(this.value)\n}\n\n\n/**\n * Maps both sides of the disjunction.\n *\n * @method\n * @summary (@Either[α, β]) => (α → γ), (β → δ) → Either[γ, δ]\n */\nEither.prototype.bimap = unimplemented\n\nLeft.prototype.bimap = function(f, _) {\n  return this.Left(f(this.value))\n}\n\nRight.prototype.bimap = function(_, g) {\n  return this.Right(g(this.value))\n}\n\n\n/**\n * Maps the left side of the disjunction.\n *\n * @method\n * @summary (@Either[α, β]) => (α → γ) → Either[γ, β]\n */\nEither.prototype.leftMap = unimplemented\nRight.prototype.leftMap  = noop\n\nLeft.prototype.leftMap = function(f) {\n  return this.Left(f(this.value))\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/data.either/lib/either.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}