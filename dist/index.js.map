{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(global => {\n  let proxify = url => 'http://crossorigin.me/' + url;\n  let unproxify = url => url.replace(/http:\\/\\/crossorigin.me\\//, '');\n\n  function MovieInfos(title, rating, url, ratingsCount) {\n    this.title = title;\n    this.rating = rating;\n    this.url = url;\n    this.ratingsCount = ratingsCount;\n  }\n\n  let fetch = (url) => {\n    if (!url) { return Promise.resolve() };\n\n    return new Promise((resolve, reject) => {\n      let xhr = new XMLHttpRequest();\n      xhr.onload = () => {\n        if (xhr.status == 200) { resolve(xhr.responseXML) }\n        else { reject(Error(xhr.statusText)) } };\n      xhr.onError = reject;\n      xhr.open(\"GET\", proxify(url));\n      xhr.responseType = \"document\";\n      xhr.overrideMimeType(\"text/html\");\n      xhr.send() }) };\n\n  async function yorckTitles() {\n    const url = \"http://www.yorck.de/mobile/filme\";\n    let page = await fetch(url);\n    let els = page.querySelectorAll('.films a');\n    let movieList = [].slice.call(els).map(_ => _.textContent)\n\n    return movieList\n  };\n\n  async function getMovieWithRating(yorckTitle) {\n    const imdbUrl = \"http://www.imdb.com\";\n\n    let getMovieUrl = page => {\n      let a = page.querySelector('.findList .result_text a');\n      if (!a) { return '' };\n      return imdbUrl + a.pathname\n    };\n\n    let toSearchUrl = movie => `${imdbUrl}/find?s=tt&q=${encodeURIComponent(movie)}`;\n    let searchPage = await fetch(toSearchUrl(yorckTitle));\n    let url = getMovieUrl(searchPage);\n\n    let $ = (page, selector) => {\n      let el = page.querySelector(selector);\n      let nullEl = { textContent: \"n/a\" }\n      return el || nullEl\n    };\n\n    let moviePage = await fetch(url);\n\n    let imdbTitle = $(moviePage, '#overview-top .header').textContent;\n    let rating = $(moviePage, '#overview-top .star-box-details strong').textContent;\n    let ratingsCount = $(moviePage, '#overview-top .star-box-details > a').textContent;\n\n    if (!moviePage) { return ['n/a', 'n/a', '', ''] };\n    return new MovieInfos(imdbTitle, rating, unproxify(moviePage.URL), ratingsCount)\n  };\n\n  (async function() {\n    let moviesEl = document.getElementById(\"movies\");\n    let showOnPage = (yorckTitle, infos) => moviesEl.innerHTML += `${yorckTitle} â€“ ${infos.title} <a href='${infos.url}'>${infos.rating} (${infos.ratingsCount})</a><br>`;\n\n    let titles = await yorckTitles();\n    let info = titles.map(t => [t, getMovieWithRating(t)]);\n    info.forEach(async function([title, i]){ showOnPage(title, await i); });\n  })()\n})(this);\n"]}